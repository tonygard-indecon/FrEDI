[{"path":"https://usepa.github.io/FrEDI/articles/About.html","id":"summary","dir":"Articles","previous_headings":"","what":"Summary","title":"About FrEDI","text":"Framework Evaluating Damages Impacts (FrEDI) developed understand communicate potential physical economic impacts future climate change United States. FrEDI works first taking user-defined projections U.S. population, gross domestic product (GDP), global (CONUS) mean surface temperature. run, FrEDI draws upon underlying region sector-specific temperature-impact relationships project output annual physical economic impacts climate change across multiple impact sectors, U.S. regions, populations within contiguous U.S. (CONUS), end 21st century.  Recommended Citation: EPA. 2021. Technical Documentation Framework Evaluating Damages Impacts (FrEDI). U.S. Environmental Protection Agency, EPA 430-R-21-004. Available : https://www.epa.gov/cira/fredi.","code":""},{"path":"https://usepa.github.io/FrEDI/articles/About.html","id":"key-characteristics","dir":"Articles","previous_headings":"","what":"Key Characteristics","title":"About FrEDI","text":"FrEDI fills important gap assessing U.S. climate change impacts : Incorporating broad range impact studies common analytic framework robust, customizable, fast facilitate custom scenario analyses Providing flexible framework can readily incorporate new information, ensure projections reflect latest science climate change impacts FrEDI draws upon wide range existing scientific literature. FrEDI currently draws upon 30 existing peer-reviewed studies climate change impact models uses impacts--degree temperature binning approach (Sarofim et al., 2021), estimate relationship future degrees warming impacts across 20 impact category sectors (Hartin et al., 2023). Many sectoral studies adapted EPA’s Climate Change Impacts Risk Assessment (CIRA) project, began 2008 assess compare impacts climate change U.S. using consistent set climate models socioeconomic scenarios. External studies (example Climate Impacts Lab) now also integrated FrEDI cases underlying studies can provide regional physical economic impacts degree warming (cm sea level rise) can scaled account future socioeconomic (e.g., GDP population) sector-specific conditions. FrEDI peer-reviewed developed open-source R package. Framework Technical Documentation subject public review comment period independent external peer review, following guidance EPA Peer-Review Handbook Influential Scientific Information (ISI). Information peer-review available EPA Science Inventory. FrEDI customizable fast. shown Figure 1, user first provides custom projections mean surface temperature, U.S. population, GDP. Within seconds FrEDI outputs timeseries annual physical economic impacts across multiple dimensions (see Technical Details pages). framework include natural variability therefore designed quantify impacts even small temperature changes. FrEDI continually improved reflect current state climate change impact science. FrEDI currently includes temperature-impact relationships 20 health, infrastructure, electricity, agriculture, recreation, ecosystem-related sectors includes capacity differentiate sectoral impacts across multiple geographic regions within U.S., demographics, various adaptation scenarios. described Technical Documentation, FrEDI continually updated incorporate new studies common framework reflect latest available science climate change impacts within U.S. borders.","code":""},{"path":"https://usepa.github.io/FrEDI/articles/About.html","id":"technical-details","dir":"Articles","previous_headings":"","what":"Technical Details","title":"About FrEDI","text":"FrEDI can run single scenario, run multiple times different inputs, example facilitate comparisons two individual scenarios (e.g., baseline policy), assess uncertainties input projections. main FrEDI function FrEDI::run_fredi(), described Getting Started page. FrEDI also includes FrEDI::run_fredi_sv() module, added capability compare distribution physical climate-driven impacts six impact sectors across different populations within U.S.","code":""},{"path":"https://usepa.github.io/FrEDI/articles/About.html","id":"fredi-input","dir":"Articles","previous_headings":"Technical Details","what":"FrEDI Input","title":"About FrEDI","text":"FrEDI::run_fredi() can accept following projections input: Temperature (global CONUS) Sea-Level Rise (optional) U.S. Population U.S. GDP user supply projections, FrEDI use FrEDI default projections (see Example #1)","code":""},{"path":"https://usepa.github.io/FrEDI/articles/About.html","id":"temperature","dir":"Articles","previous_headings":"Technical Details > FrEDI Input","what":"Temperature","title":"About FrEDI","text":"CSV containing mean temperatures degrees Celsius relative 1986-2005 average (degrees warming relative baseline). Temperature values must greater equal zero Celsius. first column needs contain years interval 2000 2100 second column contains temperatures, degrees Celsius, 1986-2005 baseline. Users can convert global temperatures CONUS temperatures using FrEDI::convertTemps(=\"global\") specifying FrEDI::import_inputs(temptype=\"global\") importing temperature scenario CSV file. FrEDI can also used project impacts associated temperature trajectories associated specific emission scenarios. Users encouraged use simple climate model first relate emissions global mean temperature change, FrEDI.","code":""},{"path":"https://usepa.github.io/FrEDI/articles/About.html","id":"sea-level-rise-slr","dir":"Articles","previous_headings":"Technical Details > FrEDI Input","what":"Sea Level Rise (SLR)","title":"About FrEDI","text":"CSV file containing custom sea level rise scenario, centimeters. first column contains years interval 2000 2100 second column contains values global mean sea level rise (GMSL), centimeters, 2000 baseline. SLR scenario specified, FrEDI project SLR based input temperature trajectory.","code":""},{"path":"https://usepa.github.io/FrEDI/articles/About.html","id":"population","dir":"Articles","previous_headings":"Technical Details > FrEDI Input","what":"Population","title":"About FrEDI","text":"CSV file containing U.S. population scenario FrEDI’s seven CONUS regions. first column contains years interval 2000 2100. number additional columns, column names, column contents depend population format set popform. details, see ?popform.","code":""},{"path":"https://usepa.github.io/FrEDI/articles/About.html","id":"u-s--gdp","dir":"Articles","previous_headings":"Technical Details > FrEDI Input","what":"U.S. GDP","title":"About FrEDI","text":"CSV file containing scenario U.S. gross domestic product (GDP). first column contains years interval 2000 2100 second column contains values GDP, total 2015$. See FrEDI::import_inputs() function information formatting input data use FrEDI.","code":""},{"path":"https://usepa.github.io/FrEDI/articles/About.html","id":"additional-parameters","dir":"Articles","previous_headings":"Technical Details > FrEDI Input","what":"Additional Parameters","title":"About FrEDI","text":"Users also option specify additional parameters, including: income elasticity (default = 0.4) - numeric value indicating elasticity use adjusting VSL applicable sectors impacts. discounting options (including flag whether calculate discounted damages, present values, including base year constant discount rate). level results aggregation specifying sectors analyze (default ==)","code":""},{"path":"https://usepa.github.io/FrEDI/articles/About.html","id":"fredi-output","dir":"Articles","previous_headings":"Technical Details","what":"FrEDI Output","title":"About FrEDI","text":"FrEDI outputs R dataframe impacts corresponding following dimensions: Regions Impact sectors Variants Impact types Note: care taken calculating national total impacts sectors, variants, impact types capture overlapping impacts. information, see Example #1","code":""},{"path":"https://usepa.github.io/FrEDI/articles/About.html","id":"fredi-regions","dir":"Articles","previous_headings":"Technical Details > FrEDI Output","what":"FrEDI Regions","title":"About FrEDI","text":"FrEDI currently estimates climate-driven impacts occur within physical borders 7 distinct regions within contiguous United States (CONUS) (see Figure 1). regions (Southeast, Southern Plains, Southwest, Northwest, Northern Plains, Midwest, Northeast) correspond 4th National Climate Assessment.","code":""},{"path":"https://usepa.github.io/FrEDI/articles/About.html","id":"fredi-impact-sectors-units","dir":"Articles","previous_headings":"Technical Details > FrEDI Output","what":"FrEDI Impact Sectors & Units","title":"About FrEDI","text":"FrEDI currently projects monetized climate-driven impacts across 20 health, infrastructure, electricity, agriculture, recreation, ecosystem-related sectors. FrEDI includes economic impacts (units $2015 USD) sectors physical endpoints (e.g., morbidity, mortality, response costs, etc.) seven sectors. current list FrEDI sectors, run: details sector underlying damage functions, see FrEDI Technical Documentation","code":"FrEDI_sector info <- FrEDI::get_sectorInfo(description =T)"},{"path":"https://usepa.github.io/FrEDI/articles/About.html","id":"fredi-variants-adaptation-options","dir":"Articles","previous_headings":"Technical Details > FrEDI Output","what":"FrEDI Variants & Adaptation Options","title":"About FrEDI","text":"assess aspects uncertainty underlying impact studies, FrEDI also includes multiple variant options select sectors. listed variant column FrEDI sector output dataframe. example, Extreme Temperature Related Mortality (ATS Extreme Temperature), includes multiple impact estimates correspond mean, well high low confidence intervals. sectors, Agriculture (CIL Agriculture), include impact estimates derived multiple damage functions associated different conditions (e.g., estimates without CO2 fertilization). FrEDI also calculates climate-driven impacts different adaptation assumptions, select sectors. Adaptation options available sector (e.g., Coastal Property, Roads, Rail) also included variants. select available adaptation options reflect extent treatment paid adaptation underlying sectoral impact studies. adaptation options labeled FrEDI : Adaptation: additional adaptation reflect “business usual” scenario, incorporates adaptive measures strategies reflected historical actions respond climate hazards Reactive Adaptation, Reasonably Anticipated Adaptation: reflect options taken without advanced warning foresight (e.g., action taken prevent mitigate future climate change impacts) Proactive Adaptation Direct Adaptation: reflect damages cost-effective adaptations implemented perfect foresight. FrEDI includes adaptation options realized magnitude, type, location, timing long-term climate-driven damages intricately linked ability implement adaptive measures reduce risks.","code":""},{"path":"https://usepa.github.io/FrEDI/articles/About.html","id":"fredi-impact-types","dir":"Articles","previous_headings":"Technical Details > FrEDI Output","what":"FrEDI Impact Types","title":"About FrEDI","text":"FrEDI also calculates impacts within sector function multiple impactTypes. impact types considered depend level detail available underlying impact studies. example, impacts climate-driven changes air quality (Air Quality) calculated separately mortality-related impacts ozone fine particulate matter (PM2.5), can combined calculate total impacts sector.","code":""},{"path":"https://usepa.github.io/FrEDI/articles/About.html","id":"fredi-sv-module","dir":"Articles","previous_headings":"Technical Details","what":"FrEDI SV Module","title":"About FrEDI","text":"FrEDI_SV module can also assess social vulnerability implications impacts climate change select sectors specific demographic groups. basic structure, specific methodology, data underlying FrEDI_SV derived EPA’s independently peer-reviewed September 2021 report,Climate Change Social Vulnerability United States: Focus Six Impacts., based assessment spatial intersection climate impacts projected occur current location different demographic groups, characterized Census American Community Survey. See Example #2 information running FrEDI_SV.","code":""},{"path":"https://usepa.github.io/FrEDI/articles/About.html","id":"interpreting-fredi-results","dir":"Articles","previous_headings":"","what":"Interpreting FrEDI Results","title":"About FrEDI","text":"results main module (FrEDI::run_fredi()) presented net annual impacts, either physical units $2015 US dollars. FrEDI evaluates negative positive effects climate change. national level, net climate-driven damages outweigh positive effects sectors. reflect climate-driven impacts accrued baseline period given impact year. Presenting impacts specific year consistent approach commonly used throughout climate impact literature, including Intergovernmental Panel Climate Change (IPCC) Scientific Assessment Reports U.S National Climate Assessment (NCA). also important caveats consider interpreting FrEDI results, including limited : FrEDI comprehensive accounting climate-driven impacts expected occur within contiguous U.S. borders currently include impacts occurring AK, HI, U.S. territories. FrEDI consider impacts U.S. citizens residing outside U.S. feedbacks climate impacts elsewhere back U.S. trade, etc. additional uncertainties FrEDI’s underlying temperature-impact relationships fully captured available variant options uncertainties climate drivers human responses adapt changes drivers","code":""},{"path":"https://usepa.github.io/FrEDI/articles/Example1.html","id":"running-fredi-with-default-parameters","dir":"Articles","previous_headings":"","what":"Running FrEDI with Default Parameters","title":"Example #1","text":"FrEDI commonly used project annual, climate-driven physical economic impacts associated user-defined trajectories U.S. temperature change (relative 1985-2005 baseline), population, GDP. vignette provides simple example run analyze data FrEDI’s default scenario. example script: Installs FrEDI R package GitHub Sets FrEDI input run parameters. Runs FrEDI inputs specified Step 2 Shows example types analyses using FrEDI output data. information FrEDI, see page FrEDI Technical Documentation","code":""},{"path":"https://usepa.github.io/FrEDI/articles/Example1.html","id":"installFrEDI","dir":"Articles","previous_headings":"","what":"Step 1. Install FrEDI R package","title":"Example #1","text":"installing first time, see Installing & Running FrEDI page. Load package successfully installing FrEDI, documentation FrEDI functions can accessed way R packages. overview FrEDI’s user-defined functions, type library(help=\"FrEDI\") R console (command show documentation FrEDI even package installed). documentation specific function, type help(\"*functionName*\", package=\"FrEDI\") R console, functionName name one functions FrEDI (e.g., help(\"aggregate_impacts\", package=\"FrEDI\")). FrEDI installed, users can also search function-specific documentation RStudio Help window. Move focus Help window using keyboard shortcut Ctrl+3 toggle search field Help using Ctrl+Alt+F1. Documentation function includes examples.","code":"library(FrEDI)"},{"path":"https://usepa.github.io/FrEDI/articles/Example1.html","id":"setFrEDI","dir":"Articles","previous_headings":"","what":"Step 2. Set FrEDI Runtime parameters","title":"Example #1","text":"First, use chunk specify & format input projections. Either provide paths specific files, set NULL use default projections variable Use chunk specify input trajectories (temperature, population, GDP) runtime parameters FrEDI. input files specified, run_fredi() use default temperature, U.S. population, GDP projections. case, run_fredi() calculate annual projected sea level rise based default temperature change. Default population scenarios based UN Median Population projection (United Nations, 2015) EPA’s ICLUSv2 model (Bierwagen et al., 2010; EPA 2017), GDP EPPA version 6 model (Chen et al., 2015). Default temperature projections GCAM reference scenario. Current default projections U.S. GDP, national population, U.S. temperature year 2090 70 trillion (2015USD), 438 million, 3.4°C respectively.  Next, set FrEDI runtime parameters","code":"# To run FrEDI for more than one scenario, the code below can be # adapted into a loop to format the inputs for each scenario.   #*********************************************** #1. Specify & Format Input Trajectories (temperature, population, U.S. GDP)  ## Input Files tempInputFile <- NULL   # Description: csv file with time series of temperature relative to 1986-2005 average    # (units: degC, values: >=0)   # data must start in 2000 or earlier and can be global or CONUS   # If global --> must convert to CONUS temperature using the import_inputs() helper function   # column 1 = 'year', column 2 = 'temp_C'  slrInputFile <- NULL    # Description: csv file with time series of global mean sea level rise relative to 2000   # (units: cm, values: >= 0 and <= 250)   # data must start in 2000 or earlier   # column 1 = 'year', column 2 = 'slr_cm'   # If NULL - slr is calculated from the input temperature trajectory  gdpInputFile <- NULL   # Description: csv file with time series of Gross Domestic Product (units: 2015$, values: >= 0)    # data must start in 2000 or earlier   # column 1 = 'year', column 2 = 'gdp_usd'    # If NULL - use default GDP trajectory  popInputFile <- NULL   # Description: csv file with time series of annual NCA regional population (values >= 0)    # data must start in 2000 or earlier   # column 1 = 'year', columns 2:x = depends on data format (popform)   # If NULL - use default population trajectory (from ICLUS)   ## Input Trajectory parameters popformFlag = 'wide'      # Description: Use this to specify the format of the regional population data   # Options: wide/long.    # Wide = columns 2-8 correspond to population in each NCA region.    # Long = column 2 = NCA region name ('region'),    # column 3 = population for that region ('reg_pop').    # NCA region names: 'Midwest', 'Northeast', 'Northern.Plains', 'Northwest',   #   'Southeast', 'Southern.Plains', 'Southwest'  temptypeflag <- 'global'    # Description: Use this to specify whether the input temperature is global or CONUS   # import_inputs() will convert to global to CONUS temperature   # Options: global (input is global T), conus (input is CONUS T)  ## Use the import_inputs() helper function to format the input trajectories for use in FrEDI inputs_list <- import_inputs(tempfile = tempInputFile,                         slrfile = slrInputFile,                         popfile = popInputFile,                         gdpfile = gdpInputFile,                         temptype = temptypeflag,                         popform = popformFlag)  # print out how many custom input files were loaded  # should be = 1 if using custom temperature only if ( length(inputs_list) ==0 ){   print('CONFIRM: No user-specific input data loaded') } else {   print( paste('CONFIRM: Number of user-specified input files loaded:',                length(inputs_list))) } ## [1] \"CONFIRM: No user-specific input data loaded\" thru2300Flag = FALSE   # Purpose:    #   Specify whether to run FrEDI through 2100 (default) or extend to 2300   # Default: FALSE (will run to 2100)  baseYearFlag <- NULL        # Purpose:    #   Specify base year for calculating present values of annual impacts   # Default: 2010  SectorListFlag <- NULL     # Purpose:    #   Specify the vector of sectors to calculate results for   # Default: report output for all sectors   # See FrEDI:get_sectorInfo() for list of all sectors  aggLevelFlag <- c('national','modelaverage','impactyear')   # Purpose:    #   Specify the desired level of results aggregation. For example,   #   to report national total results across all underlying climate-model    #   damage functions, set the flag to c('national','modelaverage')   # Options: at least one from c('national', 'modelaverage', 'impactyear',   #   'impacttype', 'all'), or \"none\".    # Default: c('national', 'modelaverage', 'impactyear','impacttype')  pvFlag <- NULL    # Purpose:    #   Calculate the present value of annual monetized impacts   # Options: TRUE/FALSE.   # Default: FALSE  rateFlag <- NULL            # Purpose:    #   If pvFlag = TRUE, specify the annual constant discount rate used    #   to calculate present values   # Default: 0.03  maxYearFlag <- 2090   # Purpose:    #   Specify the last year of the analysis    # Default: 2090  elasticityFlag <- 1      # Purpose:    #   Specify the income elasticity used to adjust the Value of a   #   Statistical Life (VSL)   # Options: any numeric value   # Default: 0.4  silentFlag <- TRUE          # Purpose:   #   Specify the level of messaging to the user   # Options: TRUE/FALSE.    # Default: TRUE  outputListFlag <- TRUE   # Purpose:   #   Specify whether to return input arguments in addition to results data frame   # Options: TRUE/FALSE.    # Default: FALSE"},{"path":"https://usepa.github.io/FrEDI/articles/Example1.html","id":"runFrEDI","dir":"Articles","previous_headings":"","what":"Step 3. Run FrEDI","title":"Example #1","text":"Run FrEDI using main run_fredi() function Default parameter options used parameters specified run_fredi().","code":"#Run FrEDI using inputs and parameters set in Step #2  output_df <- run_fredi(inputsList= inputs_list,                         thru2300 = thru2300Flag,                        sectorList = SectorListFlag,                        aggLevels=aggLevelFlag,                        pv = pvFlag,                        baseYear = baseYearFlag,                        rate = rateFlag,                        maxYear = maxYearFlag,                        elasticity = elasticityFlag,                        silent = silentFlag,                        outputList = outputListFlag                        ) ## Checking input values... ## No temperature scenario provided...using default temperature scenario... ## Creating SLR scenario from temperature scenario... ## No GDP scenario provided...Using default GDP scenario... ## Creating Population scenario from defaults... ## Formatting results... ##  Interpolating between impact year estimates... ##  Calculating model averages... ##  Calculating national totals... ##  ## Finished. # Option: write output ## Write Full Dataframe to CSV (or feather) # write.csv(output_df, './output/example_output.csv')  #First five lines of output dataframe #output_df[5,]"},{"path":"https://usepa.github.io/FrEDI/articles/Example1.html","id":"analyzeFrEDI","dir":"Articles","previous_headings":"","what":"Step 4. Analyze FrEDI","title":"Example #1","text":"following chunks provide three examples options analyze raw output dataframe FrEDI::run_fredi() Disclaimer: results provide illustrative example used analysis.","code":""},{"path":"https://usepa.github.io/FrEDI/articles/Example1.html","id":"example-1","dir":"Articles","previous_headings":"Step 4. Analyze FrEDI","what":"Example 1","title":"Example #1","text":"Extract national average economic damages (billions dollars 2015$) FrEDI sectors specified year Output chunk includes snapshot subset resulting dataframe *Note: Use sectorprimary ==1 includeaggregate ==1 flags filter FrEDI dataframe impacts default impact sectors variants. Example Subset 2090 Annual National Sectoral Climate-Driven Impacts","code":"#specify year c_years = c(2090)  #filter and aggregate data, assign to aggregate categories df_filter <- output_df$results %>%   # filter for primary sectors and variants (included to avoid    #  double counting final impacts)     filter(sectorprimary ==1,            includeaggregate ==1) %>%   # use helper function to aggregate across the impact types of    #  each sector     aggregate_impacts(aggLevels = 'impactType') %>%   # filter for national aggregate results averaged across all GCMs,    #  for the specified year     filter(model %in% c('Average','Interpolation'),            region == \"National Total\",            year %in% c_years) %>%   # convert to billions of dollars     mutate(annual_impacts = annual_impacts /1e9) %>%    # round results     mutate(across(annual_impacts, round, 0)) %>%   # select (and rename) relevant columns     select('sector','region','year','annual_impacts') %>%     rename('billions_2015$' = annual_impacts)        #Display first 10 sectors library('kableExtra') kable(df_filter[1:10,],        caption = 'Example *Subset* of 2090 Annual National Sectoral Climate-Driven Impacts') %>%   kable_styling(font_size = 12, full_width = F)"},{"path":"https://usepa.github.io/FrEDI/articles/Example1.html","id":"example-2","dir":"Articles","previous_headings":"Step 4. Analyze FrEDI","what":"Example 2","title":"Example #1","text":"Extract national average physical damages FrEDI sectors include physical impacts, specified year Output chunk includes snapshot subset resulting dataframe *Note: Use sectorprimary ==1 includeaggregate ==1 flags filter FrEDI dataframe impacts default impact sectors variants. Example Subset 2090 Annual National Sectoral Climate-Driven Physical Impacts","code":"#specify year c_years = c(2090)  #filter and aggregate data, assign to aggregate categories df_filter <- output_df$results %>%   # filter for primary sectors and variants (included to avoid    #  double counting final impacts)     filter(sectorprimary ==1,            includeaggregate ==1) %>%   # filter for national aggregate results averaged across all GCMs   #  and only include sectors that include physical impacts     filter(model %in% c('Average','Interpolation'),            region == \"National Total\",            year %in% c_years,            !(is.na(physicalmeasure))) %>%   # round results    mutate(across(c('physical_impacts'), round, 0)) %>%   # select relevant columns to display   select('sector','region','year','physicalmeasure',          'impactType','physical_impacts')  #display first 10 rows kable(df_filter[1:10,],        caption = 'Example *Subset* of 2090 Annual National Sectoral Climate-Driven Physical Impacts') %>%   kable_styling(font_size = 12, full_width = F)"},{"path":"https://usepa.github.io/FrEDI/articles/Example1.html","id":"example-3","dir":"Articles","previous_headings":"Step 4. Analyze FrEDI","what":"Example 3","title":"Example #1","text":"Extract regional economic impacts FrEDI sectors specified year Output chunk includes snapshot subset resulting dataframe *Note: Use sectorprimary ==1 includeaggregate ==1 flags filter FrEDI dataframe impacts default impact sectors variants. Example 2090 Annual Climate-Driven Damages, Region Please contact FrEDI developers additional questions.","code":"#specify year c_years = c(2090)  #filter and aggregate data, assign to aggregate categories df_filter <- output_df$results %>%   # filter for primary sectors and variants (included to avoid    #  double counting final impacts)     filter(sectorprimary ==1,            includeaggregate ==1) %>%   # use helper function to aggregate across the impact types of    #  each sector     aggregate_impacts(aggLevels = 'impactType') %>%   # filter for regional results, averaged across all GCMs,    #  for the specified year     filter(model %in% c('Average','Interpolation'),            !(region == \"National Total\"),            year %in% c_years) %>%   # convert to billions (2015$)     mutate(annual_impacts = annual_impacts /1e9) %>%   # round results     mutate(across(c('annual_impacts'), round, 0)) %>%   # sum across all sectors for each region     group_by_at(.vars = c('region','year')) %>%      summarize_at(c(\"annual_impacts\"), sum, na.rm=T) %>%     ungroup %>%   # select (and rename) relevant columns     select('region','year','annual_impacts')%>%     rename('billions_2015$' = annual_impacts)   kable(df_filter[1:7,],        caption = 'Example 2090 Annual Climate-Driven Damages, by Region') %>%   kable_styling(font_size = 12, full_width = F)"},{"path":"https://usepa.github.io/FrEDI/articles/Example2.html","id":"running-fredis-social-vulnerability-module","dir":"Articles","previous_headings":"","what":"Running FrEDI’s Social Vulnerability Module","title":"Example #2","text":"vignette provides simple example run analyze data FrEDI’s SV module, default scenario, specific sector. example script: Installs FrEDI R package GitHub Sets FrEDI_SV input run parameters. Runs FrEDI_SV inputs specified Step 2 Shows example types analyses using FrEDI_SV output data. information FrEDI FrEDI_SV, see page FrEDI Technical Documentation","code":""},{"path":"https://usepa.github.io/FrEDI/articles/Example2.html","id":"installFrEDI","dir":"Articles","previous_headings":"","what":"Step 1. Install FrEDI R package","title":"Example #2","text":"installing first time, see Installing & Running FrEDI page. Load package successfully installing FrEDI, documentation FrEDI functions can accessed way R packages. overview FrEDI’s user-defined functions, type library(help=\"FrEDI\") R console (command show documentation FrEDI even package installed). documentation specific function, type help(\"*functionName*\", package=\"FrEDI\") R console, functionName name one functions FrEDI (e.g., help(\"aggregate_impacts\", package=\"FrEDI\")). FrEDI installed, users can also search function-specific documentation RStudio Help window. Move focus Help window using keyboard shortcut Ctrl+3 toggle search field Help using Ctrl+Alt+F1. Documentation function includes examples.","code":"library(FrEDI)"},{"path":"https://usepa.github.io/FrEDI/articles/Example2.html","id":"setFrEDI","dir":"Articles","previous_headings":"","what":"Step 2. Set FrEDI_SV Runtime parameters","title":"Example #2","text":"First, use chunk specify & format input projections. Either provide paths specific files, set NULL use default projections variable Use chunk specify input trajectories (temperature, population, GDP) runtime parameters FrEDI_SV. input files specified, run_fredi_sv() use default temperature U.S. regional population projections. case, run_fredi_sv() calculate annual projected sea level rise based default temperature change. Default population scenarios based UN Median Population projection (United Nations, 2015) EPA’s ICLUSv2 model (Bierwagen et al., 2010; EPA 2017). Default temperature projections GCAM reference scenario. Current default projections U.S. national population U.S. temperature year 2090 438 million, 3.4°C respectively.  Next, set FrEDI_SV runtime parameters","code":"# To run FrEDI_SV for more than one scenario, the code below can be # adapted into a loop to format the inputs for each scenario.   #*********************************************** #1. Specify & Format Input Trajectories (temperature, population, U.S. GDP)  ## Input Files tempInputFile <- NULL   # Description: csv file with time series of temperature relative to 1986-2005 average    # (units: degC, values: >=0)   # data must start in 2000 or earlier and can be global or CONUS   # If global --> must convert to CONUS temperature using the import_inputs() helper function   # column 1 = 'year', column 2 = 'temp_C'   popInputFile <- NULL   # Description: csv file with time series of annual NCA regional population (values >= 0)    # data must start in 2000 or earlier   # column 1 = 'year', column 2 = region, column 3 = population (long popform)   #   NCA region names: 'Midwest', 'Northeast', 'Northern.Plains', 'Northwest',   #   'Southeast', 'Southern.Plains', 'Southwest'   # If NULL - use default population trajectory (from ICLUS)  ## Input Trajectory parameters popformFlag = 'long'      # Description: Use this to specify the format of the regional population data   # Options: wide/long.    # Wide = columns 2-8 correspond to population in each NCA region.    # Long = column 2 = NCA region name ('region'),    # column 3 = population for that region ('reg_pop').    # NCA region names: 'Midwest', 'Northeast', 'Northern.Plains', 'Northwest',   #   'Southeast', 'Southern.Plains', 'Southwest'  temptypeflag <- 'global'    # Description: Use this to specify whether the input temperature is global or CONUS   # import_inputs() will convert to global to CONUS temperature   # Options: global (input is global T), conus (input is CONUS T)  ## Use the import_inputs() helper function to format the input trajectories for use in FrEDI inputs_list <- import_inputs(tempfile = tempInputFile,                         popfile = popInputFile,                         temptype = temptypeflag,                         popform = popformFlag)  # print out how many custom input files were loaded  # should be = 1 if using custom temperature only if ( length(inputs_list) ==0 ){   print('CONFIRM: No user-specific input data loaded') } else {   print( paste('CONFIRM: Number of user-specified input files loaded:',                length(inputs_list))) } ## [1] \"CONFIRM: No user-specific input data loaded\" # Calculate the fredi_sv() results for a single impact sector # NOTE: the fredi_sv() module takes a few minutes to run because # the damages are calculated at the Census tract level and then  # aggregated to the regional level  # take formatted temperature vector from the output of the # import_inputs() helper function  temp_C <- inputs_list$tempInput   # take formatted population vector from the output of the # import_inputs() helper function  reg_pop <- inputs_list$popInput  # To see all available sectors, run: # FrEDI::get_sv_sectorInfo()  # Specify a specific sector sectorFlag = \"Air Quality - Premature Mortality\"   # Purpose:   #   Specify the SV sector to calculate (can only run one sector at once)   # Options: run FrEDI::get_sv_sectorInfo() to get a list of the    #   current sectors driverFlag <- temp_C   # Purpose:   #   Specify the temperature trajectory to use as an input.    #   Temperature needs to be in degrees C, *CONUS* temperature, relative   #   to the 1986-2005 average baseline   #   NOTE: if temperature is in global degrees, use the    #   FrEDI::convertTemps() helper function to convert from global to CONUS popFlag <- reg_pop   # Purpose:   #   Specify the regional population trajectory to use as an input.    #   Population needs to be regional, relative   #   to the 1986-2005 average baseline, in the long popform format silentFlag = TRUE   # Purpose:   #   Specify the level of messaging desired   # Options: TRUE/FALSE saveFlag = FALSE   # Purpose:   #   Specify whether to save output results to a pre-formatted Excel workbook   # Options: TRUE/FALSE outFlag = getwd()   # Purpose:   #   Specify a file directory to save the Excel file.   # Options: TRUE/FALSE overwriteFlag = T   # Purpose:    #   Specify whether or not to overwrite any existing Excel workbooks   # Options: TRUE/FALSE addDateFlag = FALSE   # Purpose:    #   Specify whether to add the date to the name of the output Excel file if   # Options: TRUE/FALSE   #"},{"path":"https://usepa.github.io/FrEDI/articles/Example2.html","id":"runFrEDI","dir":"Articles","previous_headings":"","what":"Step 3. Run FrEDI_SV","title":"Example #2","text":"Run FrEDI_SV using main run_fredi_sv() function Default parameter options used parameters specified run_fredi_sv(). Note: run_fredi_sv() takes longer run main module, run_fredi(), SV damage calculations conducted finer spatial scales (e.g., U.S. Census tract vs. regional level).","code":"#Run FrEDI using inputs and parameters set in Step #2  output_df <- run_fredi_sv(sector      = sectorFlag,                            driverInput = driverFlag,                            popInput    = popFlag,                           silent      = silentFlag,                           save        = saveFlag,                            outpath     = outFlag,                           overwrite   = overwriteFlag,                           addDate     = addDateFlag)   # Option: write output ## Write Full Dataframe to CSV (or feather) # write.csv(output_df, './output/example_output.csv')  #First five lines of output dataframe #output_df[5,]"},{"path":"https://usepa.github.io/FrEDI/articles/Example2.html","id":"analyzeFrEDI","dir":"Articles","previous_headings":"","what":"Step 4. Analyze FrEDI_SV","title":"Example #2","text":"Results FrEDI::run_fredi_sv() module can analyzed directly R accompanying MS excel workbook (input save = TRUE) Disclaimer: results provide illustrative example used analysis. Example analyses coming soon Please contact FrEDI developers additional questions.","code":""},{"path":"https://usepa.github.io/FrEDI/articles/manual.html","id":"installation","dir":"Articles","previous_headings":"","what":"Installation","title":"Installing & Running FrEDI","text":"FrEDI developed R package.","code":""},{"path":"https://usepa.github.io/FrEDI/articles/manual.html","id":"r","dir":"Articles","previous_headings":"Installation","what":"R","title":"Installing & Running FrEDI","text":"Install R Rstudio, following instructions operating system.","code":""},{"path":"https://usepa.github.io/FrEDI/articles/manual.html","id":"fredi","dir":"Articles","previous_headings":"Installation","what":"FrEDI","title":"Installing & Running FrEDI","text":"FrEDI R package can installed using withr::with_libpaths() devtools::install_github() functions. packages installed, run: install FrEDI first time: user can specify particular github branch, including ref. included, default branch main.  installation exists following error: Downloading GitHub repo USEPA/FrEDI@ref Error utils::download.file(url, path, method = method, quiet = quiet,  :    open URL 'https://api.github.com/repos/USEPA/FrEDI/tarball/ref' Make sure withr devtools date. prompted installation, update listed R packages (e.g., Enter 1).","code":"install.packages('withr') install.packages('devtools') withr::with_libpaths(       new = .libPaths()[1],       devtools::install_github(         repo = \"USEPA/FrEDI\",           subdir = \"FrEDI\",           type = \"source\",           force = TRUE,           ref = \"main\" # edit this to install a different branch of interest         )     )  library(FrEDI)"},{"path":"https://usepa.github.io/FrEDI/articles/manual.html","id":"running-fredi","dir":"Articles","previous_headings":"","what":"Running FrEDI","title":"Installing & Running FrEDI","text":"provide simple example steps required run FrEDI: RStudio, first load user-defined temperature, population, GDP input files. temperature file includes global temperatures, use FrEDI helper functions convert CONUS temperature. Next, run FrEDI: examples, visit Examples page.","code":"tempInputFile <- file.path(\"your_file.csv\") inputs        <- import_inputs(tempfile = tempInputFile,                                  temptype = \"global\") df_fredi_output <- run_fredi(inputsList= inputs)"},{"path":"https://usepa.github.io/FrEDI/articles/References.html","id":"documentation","dir":"Articles","previous_headings":"","what":"Documentation","title":"Documentation & Applications","text":"Publications Hartin C., E.E. McDuffie, K. Novia, M. Sarofim, B. Parthum, J. Martinich, S. Barr, J. Neumann, J. Willwerth, & . Fawcett. Advancing estimates future climate impacts within United States, 2023, Earth System Dynamics, https://esd.copernicus.org/articles/14/1015/2023/ Sarofim, M.C., Martinich, J., Neumann, J.E. et al. temperature binning approach multi-sector climate impact analysis. Climatic Change 165, 22 2021, https://doi.org/10.1007/s10584-021-03048-6 Technical Documentation FrEDI Technical Documentation (last updated July 2023): https://www.epa.gov/system/files/documents/2023-08/Technical%20Documentation%20on%20the%20Framework%20for%20Evaluating%20Damages%20and%20Impacts_MainText_2023.07.pdf Technical Documentation Appendix (last updated July 2023): https://www.epa.gov/system/files/documents/2023-08/Technical%20Documentation%20on%20the%20Framework%20for%20Evaluating%20Damages%20and%20Impacts_Appendices_2023.07.pdf","code":""},{"path":"https://usepa.github.io/FrEDI/articles/References.html","id":"example-applications","dir":"Articles","previous_headings":"","what":"Example Applications","title":"Documentation & Applications","text":"FrEDI used explore variety questions. link several recent documents use FrEDI assess future impacts climate change within U.S. 2023 Office Management Budget, United States Executive Office President, White Paper Budget Exposure Increased Costs Lost Revenue Due Climate Change: Preliminary Assessment Proposed Framework Future Assessments. March 2023, https://www.whitehouse.gov/wp-content/uploads/2023/03/climate_budget_exposure_fy2024.pdf 2022 U.S. Environmental Protection Agency, U.S. EPA Supplementary Material RIA Supplemental Proposed Rulemaking, NSPS EG Existing Sources: Oil Natural Gas Sector Climate Review – EPA External Review Draft Report Social Cost Greenhouse Gases: Estimates Incorporating Recent Scientific Advances. September 2022, Docket Number: EPA-HQ-OAR-2021-0317-1549 (https://www.regulations.gov/document/EPA-HQ-OAR-2021-0317-1549) 2021 United States Department State United States Executive Office President, Long-Term Strategy United States: Pathways Net-Zero Greenhouse Gas Emissions 2050, Washington DC. November 2021. (https://www.whitehouse.gov/wp-content/uploads/2021/10/US-Long-Term-Strategy.pdf)","code":""},{"path":"https://usepa.github.io/FrEDI/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Corinne Hartin. Author, maintainer.            cahartin Erin McDuffie. Author, contributor.            emcduffie Karen Noiva. Author, contributor.            knoiva-indecon Maddock. Contributor.            maddockw Tony Gardella. Contributor.            tonygard-indecon","code":""},{"path":"https://usepa.github.io/FrEDI/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Hartin C, McDuffie E, Noiva K (2023). FrEDI: Framework Evaluating Damages Impacts (FrEDI). https://usepa.github.io/FrEDI, https://epa.gov/cira/FrEDI/, https://github.com/USEPA/FrEDI/.","code":"@Manual{,   title = {FrEDI: The Framework for Evaluating Damages and Impacts (FrEDI)},   author = {Corinne Hartin and Erin McDuffie and Karen Noiva},   year = {2023},   note = {https://usepa.github.io/FrEDI, https://epa.gov/cira/FrEDI/, https://github.com/USEPA/FrEDI/}, }"},{"path":[]},{"path":"https://usepa.github.io/FrEDI/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"members, contributors, leaders pledge make participation community harassment-free experience everyone, regardless age, body size, visible invisible disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socio-economic status, nationality, personal appearance, race, caste, color, religion, sexual identity orientation. pledge act interact ways contribute open, welcoming, diverse, inclusive, healthy community.","code":""},{"path":"https://usepa.github.io/FrEDI/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes positive environment community include: Demonstrating empathy kindness toward people respectful differing opinions, viewpoints, experiences Giving gracefully accepting constructive feedback Accepting responsibility apologizing affected mistakes, learning experience Focusing best just us individuals, overall community Examples unacceptable behavior include: use sexualized language imagery, sexual attention advances kind Trolling, insulting derogatory comments, personal political attacks Public private harassment Publishing others’ private information, physical email address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"https://usepa.github.io/FrEDI/CODE_OF_CONDUCT.html","id":"enforcement-responsibilities","dir":"","previous_headings":"","what":"Enforcement Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Community leaders responsible clarifying enforcing standards acceptable behavior take appropriate fair corrective action response behavior deem inappropriate, threatening, offensive, harmful. Community leaders right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, communicate reasons moderation decisions appropriate.","code":""},{"path":"https://usepa.github.io/FrEDI/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within community spaces, also applies individual officially representing community public spaces. Examples representing community include using official e-mail address, posting via official social media account, acting appointed representative online offline event.","code":""},{"path":"https://usepa.github.io/FrEDI/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 2.1, available https://www.contributor-covenant.org/version/2/1/code_of_conduct.html. Community Impact Guidelines inspired Mozilla’s code conduct enforcement ladder. answers common questions code conduct, see FAQ https://www.contributor-covenant.org/faq. Translations available https://www.contributor-covenant.org/translations.","code":""},{"path":"https://usepa.github.io/FrEDI/index.html","id":"fredi-","dir":"","previous_headings":"","what":"The Framework for Evaluating Damages and Impacts (FrEDI)","title":"The Framework for Evaluating Damages and Impacts (FrEDI)","text":"repository FrEDI, Framework Evaluating Damages Impacts, developed U.S. Environmental Protection Agency (EPA). FrEDI open-source, reduced complexity model rapidly projects impacts climate change within United States, custom temperature policy pathway. FrEDI developed fill important gap assessing U.S. climate change impacts incorporating broad range impact studies common, open-source framework. allows FrEDI facilitate comparability across impact studies, flexibility facilitating custom scenario analyses. FrEDI continually developed currently draws upon 30 existing peer-reviewed studies, including Climate Change Impacts Risk Analysis (CIRA) project, estimate relationship future degrees warming impacts across 20 category sectors, 7 U.S. regions, populations. supplied user-defined temperature trajectory, FrEDI applies temperature-impact relationships rapidly project annual climate change impacts damages end 21st century. Recommended Citation: EPA. 2021. Technical Documentation Framework Evaluating Damages Impacts (FrEDI). U.S. Environmental Protection Agency, EPA 430-R-21-004. Available : https://www.epa.gov/cira/fredi. EPA Disclaimer United States Environmental Protection Agency (EPA) GitHub project code provided “” basis user assumes responsibility use. EPA relinquished control information longer responsibility protect integrity, confidentiality, availability information. reference specific commercial products, processes, services service mark, trademark, manufacturer, otherwise, constitute imply endorsement, recommendation favoring EPA. EPA seal logo shall used manner imply endorsement commercial product activity EPA United States Government. submitting pull request GitHub /installing package, make agreement EPA submit claim compensation services rendered EPA federal agency. , agree charge time spend developing software code related project federal grant cooperative agreement.","code":""},{"path":"https://usepa.github.io/FrEDI/reference/aggregate_impacts.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarize and aggregate impacts from FrEDI (calculate national totals, average across models, sum impact types, and interpolate between impact year estimates) — aggregate_impacts","title":"Summarize and aggregate impacts from FrEDI (calculate national totals, average across models, sum impact types, and interpolate between impact year estimates) — aggregate_impacts","text":"Summarize aggregate impacts FrEDI (calculate national totals, average across models, sum impact types, interpolate impact estimate years).","code":""},{"path":"https://usepa.github.io/FrEDI/reference/aggregate_impacts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarize and aggregate impacts from FrEDI (calculate national totals, average across models, sum impact types, and interpolate between impact year estimates) — aggregate_impacts","text":"","code":"aggregate_impacts(   data,   aggLevels = c(\"national\", \"modelaverage\", \"impactyear\", \"impacttype\"),   columns = c(\"annual_impacts\"),   groupByCols = c(\"sector\", \"variant\", \"impactYear\", \"impactType\", \"model_type\", \"model\",     \"region\"),   mode = \"all\" )"},{"path":"https://usepa.github.io/FrEDI/reference/aggregate_impacts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarize and aggregate impacts from FrEDI (calculate national totals, average across models, sum impact types, and interpolate between impact year estimates) — aggregate_impacts","text":"data Data frame results FrEDI (outputs run_fredi()) aggLevels Levels aggregation summarize data: one c(\"national\", \"modelAverage\", \"impactYear\", \"impactType\", \"\"). Defaults levels (.e., aggLevels=\"\"). columns Character vector columns aggregate results (defaults columns=c(\"annual_impacts\")). groupByCols Character vector indicating columns use grouping. Defaults groupByCols=c(\"sector\", \"variant\", \"impactYear\", \"impactType\", \"model_type\", \"model\", \"region\"). Note \"variant\" column referred contains information variant (adaptation) name “N/”, applicable.","code":""},{"path":"https://usepa.github.io/FrEDI/reference/aggregate_impacts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarize and aggregate impacts from FrEDI (calculate national totals, average across models, sum impact types, and interpolate between impact year estimates) — aggregate_impacts","text":"output run_fredi() R data frame object containing annual average impacts, year (2010-2090), summarized specified aggregation grouping levels.","code":""},{"path":"https://usepa.github.io/FrEDI/reference/aggregate_impacts.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Summarize and aggregate impacts from FrEDI (calculate national totals, average across models, sum impact types, and interpolate between impact year estimates) — aggregate_impacts","text":"post-processing helper function aggregates summarizes FrEDI results levels aggregation specified user (passed aggLevels). Users can specify single aggregation level multiple aggregation levels passing single character string character vector aggLevels. Options aggregation include calculating national totals (aggLevels=\"national\"), averaging across model types models (aggLevels=\"modelAverage\"), summing impact types (aggLevels=\"impactType\"), interpolating impact year estimates (aggLevels=\"impactYear\"). Users can specify aggregation levels specifying aggLevels=\"\" (default). post-processing helper function aggregates summarizes temperature binning results levels aggregation specified user (passed aggLevels). Users can specify single aggregation level multiple aggregation levels passing single character string character vector aggLevels. Options aggregation include calculating national totals (aggLevels=\"national\"), averaging across model types models (aggLevels=\"modelaverage\"), summing impact types (aggLevels=\"impacttype\"), interpolate impact year estimates (aggLevels=\"impactyear\"). Users can specify aggregation levels specifying aggLevels=\"\" (default) aggregation levels (aggLevels=\"none\"). aggregating impacts national totals /model averages, aggregate_impacts() drop pre-summarized results  (.e., values region=\"National Total\" /model=\"average\", respectively) already present data `reaggregate levels. aggLevels, aggregate_impacts() performs following calculations (note \"variant\" column referred contains information variant (adaptation) name “N/”, applicable): Note aggregate_impacts() drops columns used grouping aggregation.","code":""},{"path":"https://usepa.github.io/FrEDI/reference/aggregate_impacts.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Summarize and aggregate impacts from FrEDI (calculate national totals, average across models, sum impact types, and interpolate between impact year estimates) — aggregate_impacts","text":"Environmental Protection Agency (EPA). 2021. Technical Documentation Framework Evaluating Damages Impacts (FrEDI). Technical Report EPA 430-R-21-004, EPA, Washington, DC. Available https://epa.gov/cira/FrEDI/.","code":""},{"path":"https://usepa.github.io/FrEDI/reference/aggregate_impacts.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summarize and aggregate impacts from FrEDI (calculate national totals, average across models, sum impact types, and interpolate between impact year estimates) — aggregate_impacts","text":"","code":"### Create temperature binning scenario df_tempExOut <- run_fredi(aggLevels=\"none\", pv=TRUE, silent=TRUE) #> Checking input values... #> No temperature scenario provided...using default temperature scenario... #> Creating SLR scenario from temperature scenario... #> No GDP scenario provided...Using default GDP scenario... #> Creating Population scenario from defaults... #> Formatting results... #>  #> Finished.  ### Aggregate temperature binning summary across multiple columns agg_tempExOut <- df_tempExOut %>% aggregate_impacts(columns=c(\"annual_impacts\", \"discounted_impacts\")) #> \tInterpolating between impact year estimates... #> \tCalculating model averages... #> \tCalculating national totals... #> \tSumming across impact types..."},{"path":"https://usepa.github.io/FrEDI/reference/convertTemps.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert contiguous U.S. (CONUS) temperatures to global temperatures or vice versa — convertTemps","title":"Convert contiguous U.S. (CONUS) temperatures to global temperatures or vice versa — convertTemps","text":"pre-processing helper function converts list warming temperatures degrees Celsius (temps) global CONUS (=\"global\") vice versa (=\"conus\"). equations converting CONUS global temperatures back described elsewhere report.","code":""},{"path":"https://usepa.github.io/FrEDI/reference/convertTemps.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert contiguous U.S. (CONUS) temperatures to global temperatures or vice versa — convertTemps","text":"","code":"convertTemps(temps, from)"},{"path":"https://usepa.github.io/FrEDI/reference/convertTemps.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert contiguous U.S. (CONUS) temperatures to global temperatures or vice versa — convertTemps","text":"temps numeric vector CONUS global temperatures degrees Celsius. character string (one  c(\"conus\", \"global\")), indicating whether users converting CONUS global temperatures (=\"conus\") global CONUS (=\"global\"). Temperatures contiguous U.S. (CONUS) degrees Celsius converted global temperatures (convertTemps(temps, =\"conus\")) degrees Celsius multiplying CONUS temperatures constant 1/k (k=1.421). Global temperatures degrees Celsius converted CONUS temperatures (convertTemps(temps, =\"global\")) degrees Celsius multiplying global temperatures constant k (k=1.421).","code":""},{"path":"https://usepa.github.io/FrEDI/reference/convertTemps.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert contiguous U.S. (CONUS) temperatures to global temperatures or vice versa — convertTemps","text":"Outputs numeric vector temperatures degrees Celsius.","code":""},{"path":"https://usepa.github.io/FrEDI/reference/convertTemps.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Convert contiguous U.S. (CONUS) temperatures to global temperatures or vice versa — convertTemps","text":"Environmental Protection Agency (EPA). 2021. Technical Documentation Framework Evaluating Damages Impacts (FrEDI). Technical Report EPA 430-R-21-004, EPA, Washington, DC. Available https://epa.gov/cira/FrEDI/.","code":""},{"path":"https://usepa.github.io/FrEDI/reference/convertTemps.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert contiguous U.S. (CONUS) temperatures to global temperatures or vice versa — convertTemps","text":"","code":"convertTemps(1:7, from = \"global\") #> [1] 1.421 2.842 4.263 5.684 7.105 8.526 9.947 convertTemps(1:7, from = \"conus\") #> [1] 0.7037298 1.4074595 2.1111893 2.8149191 3.5186488 4.2223786 4.9261084"},{"path":"https://usepa.github.io/FrEDI/reference/defaultResults.html","id":null,"dir":"Reference","previous_headings":"","what":"Default outputs of run_fredi() — defaultResults","title":"Default outputs of run_fredi() — defaultResults","text":"dataframe containing default outputs run_fredi()","code":""},{"path":"https://usepa.github.io/FrEDI/reference/defaultResults.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Default outputs of run_fredi() — defaultResults","text":"","code":"defaultResults"},{"path":"https://usepa.github.io/FrEDI/reference/defaultResults.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Default outputs of run_fredi() — defaultResults","text":"data frame 173 016 rows 18 columns: sector Name sector variant Name adaptation variant (values sector-specific) impactYear Name impact year (\"2010\", \"2090\", \"N/\", \"Interpolation\") impactType Name impact type (\"\" sector-specific values) region Name associated region (\"Midwest\", \"Northeast\", \"Northern Plains\", \"Northwest\", \"Southeast\", \"Southern Plains\", \"Southwest\", \"National Total\") model_type Type model used calculate impacts --- either \"GCM\" (\"Global Climate Model\") \"SLR\" (\"Sea Level Rise\") model Name GCM (\"Average\", \"CanESM2\", \"CCSM4\", \"GCM Ensemble\", \"GFDL-CM3\", \"GISS-E2-R\", \"HadGEM2-ES\", \"MIROC5\", \"MRI-CGCM3\") SLR model (\"Interpolation\") year Year output driverValue Value associated driver type (\"degrees Celsius\" temperature \"cm\" sea level rise) driverUnit Unit associated driver type (\"degrees Celsius\" temperature \"cm\" sea level rise) driverType Associated driver type (\"Temperature\" \"GMSL (SLR)\") includeaggregate 0 1 value indicating whether variant included aggregation sectorprimary 0 1 value indicating whether sector primary CIRA sector gdp_usd National gross domestic product (GDP) associated year 2015 USD (U.S. dollars) national_pop National population associated year gdp_per_cap National GDP per capita associated year 2015 USD (U.S. dollars) per capita reg_pop Regional population associated year annual_impacts Annual impacts associated year, region, sector, variant, impact year, impact type, model ... ...","code":""},{"path":"https://usepa.github.io/FrEDI/reference/defaultResults.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Default outputs of run_fredi() — defaultResults","text":"https://epa.gov/cira/FrEDI/","code":""},{"path":"https://usepa.github.io/FrEDI/reference/FrEDI.html","id":null,"dir":"Reference","previous_headings":"","what":"README\r\nFrEDI: The Framework for Evaluating Damages and Impacts — FrEDI","title":"README\r\nFrEDI: The Framework for Evaluating Damages and Impacts — FrEDI","text":"FrEDI R package developed U.S. Environmental Protection Agency (EPA). functions data provided package can used estimate climate change impacts contiguous United States (CONUS) using Framework Evaluating Damages Impacts (FrEDI), developed part EPA's Climate Change Impacts Risk Analysis (CIRA) project. FrEDI contains R code implement FrEDI allow users project impacts climate change sea level rise selected set sectors.","code":""},{"path":"https://usepa.github.io/FrEDI/reference/FrEDI.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"README\r\nFrEDI: The Framework for Evaluating Damages and Impacts — FrEDI","text":"information Framework CIRA project, visit https://epa.gov/cira/, especially https://epa.gov/cira/FrEDI/.","code":""},{"path":"https://usepa.github.io/FrEDI/reference/FrEDI.html","id":"overview-of-functions","dir":"Reference","previous_headings":"","what":"Overview of Functions","title":"README\r\nFrEDI: The Framework for Evaluating Damages and Impacts — FrEDI","text":"function run_fredi() provided package primary function implementing FrEDI main inputs run_fredi() climate scenarios (temperature degrees Celsius, global mean sea level rise centimeters) socioeconomic scenarios (gross domestic product, regional population). run_fredi() projects climate impacts scenarios using temperature binning framework. Users can also specify levels aggregate climate impacts. FrEDI also contains functions assist pre-processing input scenarios post-processing outputs. instance, pre-processing function import_inputs() helps users import scenarios user-specified comma-separated value (CSV) files, post-processing function get_plots() generates couple different types images (creates heatmaps ribbon plots climate impacts time) outputs run_fredi(). Additional helper functions provided FrEDI include convertTemps(), temps2slr(), get_sectorInfo(), aggregate_impacts(). convertTemps() helps users convert global mean temperature temperatures contiguous United States (CONUS) (degrees Celsius). temps2slr() helps users estimate global mean sea level rise (GMSL, centimeters) global mean temperature degrees Celsius. get_sectorInfo() allows users access list sectors within FrEDI related sector information. post-processing helper function aggregate_impacts() helps users aggregate /summarize outputs temperature binning (calculates national totals, model averages, impact totals, interpolations multiple impact years (applicable sectors). Users option run aggregate_impacts() outputs run_fredi(). However, users can alternatively specify aggregation levels arguments main function, run_fredi(), run aggregate_impacts() specified levels returning outputs (default, run_fredi() returns results aggregated aggregation levels). Version 2.3.0 includes module, FrEDI Social Vulnerability (SV) module estimating impacts socially vulnerable populations select sectors. get_sv_sectorInfo() allows users access list sectors within FrEDI SV module related sector information. function run_fredi_sv() main function FrEDI SV module. run_fredi_sv() designed calculate impacts single sector time custom population scenario one custom temperature sea level rise scenarios. running run_fredi_sv(), users option save results Excel file provides basic data visualization module outputs. information data underlying FrEDI SV module, visit https://www.epa.gov/cira/social-vulnerability-report/. @section Overview Package Contents: FrEDI consists files following directories: R. Contains function definitions (files ending \".R\") configuration files (ending \".rda\"). data. Contains R Data files ending \".rdb\", \".rds\", \".rdx\", containing data included package. help html. Contain documentation functions available user, including function descriptions, lists arguments outputs, examples. See \"html/00Index.html\" individual R help functions information individual functions. Meta. Contains RDS files (ending \".rds\") information package contents. extdata. extdata/scenarios Contains three CSV files users test function importing data. (\"pop_scenario.csv\", \"slr_from_GCAM.csv\", \"GCAM_scenario.csv\") respectively contain examples population scenario, sea level rise scenario, temperature scenario. information, refer documentation function \"import_inputs()\". extdata/sv contains files used FrEDI SV module. FrEDI R package contains dataset default results defaultResults, contains annual impacts produced run_fredi() default scenarios (.e., default temperature, GDP regional population trajectories), can loaded R workspace (data(defaultResults)). rEDI R package also provides set driver scenarios (gcamScenarios) population scenario (popScenario) use FrEDI SV Module (can loaded workspace using data() function). Typical use involve library(FrEDI) require(FrEDI).","code":""},{"path":"https://usepa.github.io/FrEDI/reference/FrEDI.html","id":"status","dir":"Reference","previous_headings":"","what":"Status","title":"README\r\nFrEDI: The Framework for Evaluating Damages and Impacts — FrEDI","text":"code repository provided \"draft\" state reviewed cleared U.S. EPA. status updated models reviewed.","code":""},{"path":"https://usepa.github.io/FrEDI/reference/FrEDI.html","id":"dependencies","dir":"Reference","previous_headings":"","what":"Dependencies","title":"README\r\nFrEDI: The Framework for Evaluating Damages and Impacts — FrEDI","text":"FrEDI requires R (>= 3.5.0). FrEDI depends : tidyr (Tidy Messy Data). official documentation tidyr can found . tidyr can installed using install.packages(\"tidyr\"), see link information. dplyr (Grammar Data Manipulation). official documentation dplyr can found . dplyr can installed using install.packages(\"dplyr\"), see link information. ggplot2 (Create Elegant Data Visualisations Using Grammar Graphics). official documentation ggplot2 can found . ggplot2 can installed using install.packages(\"ggplot2\"), see link information. openxlsx (Read, Write Edit xlsx Files). official documentation openxlsx can found . openxlsx can installed using install.packages(\"openxlsx\").","code":""},{"path":"https://usepa.github.io/FrEDI/reference/FrEDI.html","id":"license","dir":"Reference","previous_headings":"","what":"License","title":"README\r\nFrEDI: The Framework for Evaluating Damages and Impacts — FrEDI","text":"repository released MIT License.","code":""},{"path":"https://usepa.github.io/FrEDI/reference/FrEDI.html","id":"epa-disclaimer","dir":"Reference","previous_headings":"","what":"EPA Disclaimer","title":"README\r\nFrEDI: The Framework for Evaluating Damages and Impacts — FrEDI","text":"United States Environmental Protection Agency (EPA) GitHub project code provided \"\" basis user assumes responsibility use. EPA relinquished control information longer responsibility protect integrity, confidentiality, availability information. reference specific commercial products, processes, services service mark, trademark, manufacturer, otherwise, constitute imply endorsement, recommendation favoring EPA. EPA seal logo shall used manner imply endorsement commercial product activity EPA United States Government. submitting pull request GitHub /installing package, make agreement EPA submit claim compensation services rendered EPA federal agency. , agree charge time spend developing software code related project federal grant cooperative agreement.","code":""},{"path":"https://usepa.github.io/FrEDI/reference/gcamScenarios.html","id":null,"dir":"Reference","previous_headings":"","what":"Six driver scenarios that can be passed as inputs to run_fredi_sv() — gcamScenarios","title":"Six driver scenarios that can be passed as inputs to run_fredi_sv() — gcamScenarios","text":"dataframe containing six driver scenarios can passed inputs run_fredi_sv().","code":""},{"path":"https://usepa.github.io/FrEDI/reference/gcamScenarios.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Six driver scenarios that can be passed as inputs to run_fredi_sv() — gcamScenarios","text":"","code":"gcamScenarios"},{"path":"https://usepa.github.io/FrEDI/reference/gcamScenarios.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Six driver scenarios that can be passed as inputs to run_fredi_sv() — gcamScenarios","text":"data frame 546 rows 4 columns: year Year temp_C CONUS temperature (degrees Celsius) associated year scenario slr_cm Global Mean Sea Level Rise (centimeters) associated year scenario scenario Associated scenario identifier","code":""},{"path":"https://usepa.github.io/FrEDI/reference/gcamScenarios.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Six driver scenarios that can be passed as inputs to run_fredi_sv() — gcamScenarios","text":"https://epa.gov/cira/FrEDI/","code":""},{"path":"https://usepa.github.io/FrEDI/reference/gcamScenarios.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Six driver scenarios that can be passed as inputs to run_fredi_sv() — gcamScenarios","text":"scenarios dataframe created using Hector, reduced-form global carbon-cycle climate model (Hartin et al., 2015) model temperatures associated emissions scenarios Global Change Analysis Model v5.3 (GCAM). Global Change Analysis Model v5.3 (GCAM) open source model represents linkages energy, water, land, climate economic systems (Calvin et al., 2019). information Hector GCAM, see Appendix C FrEDI documentation. Calvin, K., Patel, P., Clarke, L., et al. 2019. GCAM v5.1: representing linkages energy, water, land, climate, economic systems, Geosci. Model Dev., 12:677–698. https://doi.org/10.5194/gmd-12-677-2019. Hartin, C.., Patel, P., Schwarber, ., Link, R.P. Bond-Lamberty, B.P., 2015. simple object-oriented open-source model scientific policy analyses global climate system–Hector v1. 0. Geoscientific Model Development, 8(4), pp.939-955.","code":""},{"path":"https://usepa.github.io/FrEDI/reference/get_plots.html","id":null,"dir":"Reference","previous_headings":"","what":"Create plots of FrEDI outputs — get_plots","title":"Create plots of FrEDI outputs — get_plots","text":"`function creates plots summarized FrEDI outputs. get_plots() returns list heatmaps model types present data (GCMs SLR scenarios) ribbon plots, sector.","code":""},{"path":"https://usepa.github.io/FrEDI/reference/get_plots.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create plots of FrEDI outputs — get_plots","text":"","code":"get_plots(   data = NULL,   column = \"annual_impacts\",   undiscounted = TRUE,   plotTypes = \"all\",   save = FALSE,   directory = NULL,   groupVars = c(\"sector\", \"variant\") )"},{"path":"https://usepa.github.io/FrEDI/reference/get_plots.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create plots of FrEDI outputs — get_plots","text":"data Data frame summarized outputs produced run_fredi(). change column names run_fredi() output running get_plots(). column character string indicating name column data create plots. undiscounted TRUE/FALSE value indicating whether values column represent undiscounted values discounted values (.e., present values). Defaults undiscounted=TRUE. plotTypes Character string character vector indicating types plots produce. Options c(\"heatmaps\", \"ribbon\", \"\"). Set plotTypes=\"\" (default) produce types plots. save TRUE/FALSE value indicating whether save results. directory value supplied (.e., !.null(directory)), defaults save=TRUE. Otherwise, default save=FALSE. directory character string indicating location directory save plot objects. default (.e., directory=NULL). groupVars character vector indicating columns use grouping. Defaults groupVars=c(\"sector\", \"variant\")","code":""},{"path":"https://usepa.github.io/FrEDI/reference/get_plots.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create plots of FrEDI outputs — get_plots","text":"get_plots() returns nested list plots:","code":""},{"path":"https://usepa.github.io/FrEDI/reference/get_plots.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create plots of FrEDI outputs — get_plots","text":"function creates plots summarized FrEDI outputs. get_plots() returns list heatmaps model types present data (GCMs SLR scenarios) annual results sectors variants. Results FrEDI must summed across impact types using get_plots() (use run_fredi() defaults run aggregate_impacts(aggLevels=\"impactType\") output run_fredi()). default, get_plots() plots results \"annual_impacts\" column (users can specify column name data column). argument undiscounted used get_plots() plot labels file directory names saving results. get_plots() produces heatmaps (plotTypes=\"heatmaps\") outputs FrEDI /plots average value range impacts time series (plotTypes=\"ribbon\") sector-variant-region combination. Users can specify plot types produce setting plotTypes. Set plotTypes=\"\" (default) produce heat maps annual results specify single type (plotTypes=\"heatmaps\" plotTypes=\"ribbon\", respectively). heatmaps display numeric values specified column (e.g., \"annual_impacts\") grid colored pixels. row grid corresponds sector-variant combination (e.g., \"Coastal Properties, Adaptation\"), columns grid correspond years. words, heatmaps display relative intensity impacts sector variant compared others. colors heatmap gradient ranging dark blue (impacts values zero) dark red (impacts values zero), midpoint zero (missing values appear grey pixels). scale gradient determined underlying data, darkest points corresponding minimum maximum values. temperature-driven (GCM sectors) SLR-driven (SLR sectors) sectors present data, get_plots() produce separate heatmap . heatmap displays panels region (stacked vertically) underlying models (organized horizontally). Setting (plotTypes=\"ribbon\") plots annual impacts time series. temperature-driven sectors, model average plotted line range model values (minimum maximum) plotted ribbon plot. SLR-driven sectors, interpolated impacts plotted line. sectors multiple variants, impacts individual variants displayed separate panels (organized horizontally). save=TRUE user supplies path directory (.e., !.null(directory)), get_plots() try save results specified directory. Separate directories created within specified directory heatmaps ribbon plots.","code":""},{"path":"https://usepa.github.io/FrEDI/reference/get_plots.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Create plots of FrEDI outputs — get_plots","text":"Environmental Protection Agency (EPA). 2021. Technical Documentation Framework Evaluating Damages Impacts (FrEDI). Technical Report EPA 430-R-21-004, EPA, Washington, DC. Available https://epa.gov/cira/FrEDI/.","code":""},{"path":"https://usepa.github.io/FrEDI/reference/get_plots.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create plots of FrEDI outputs — get_plots","text":"","code":"### Create temperature binning scenario df_tempExOut <- get_fredi(aggLevels=\"none\", pv=TRUE, silent=TRUE) #> Error in get_fredi(aggLevels = \"none\", pv = TRUE, silent = TRUE): could not find function \"get_fredi\"  ### Aggregate temperature binning summary across multiple columns agg_tempExOut <- df_tempExOut %>% aggregate_impacts(columns=c(\"annual_impacts\", \"discounted_impacts\")) #> Error in ungroup(.): object 'df_tempExOut' not found  ### Create list of plots for aggregated results agg_plotList <- agg_tempExOut %>% get_plots() #> Error in (function (y) {    y$valueColumn <- y[, column]    return(y)})(.): object 'agg_tempExOut' not found  ### Create list of heatmaps for regional values only: reg_plotList <- agg_tempExOut %>% filter(region!=\"National Total\") %>% get_plots(plotTypes=\"heatmaps\") #> Error in filter(., region != \"National Total\"): object 'agg_tempExOut' not found  ### Create list of annual plots for national values only: nation_plotList <- agg_tempExOut %>% filter(region==\"National Total\") %>% get_plots(plotTypes=\"annual\") #> Error in filter(., region == \"National Total\"): object 'agg_tempExOut' not found"},{"path":"https://usepa.github.io/FrEDI/reference/get_sectorInfo.html","id":null,"dir":"Reference","previous_headings":"","what":"This function provides information about the sectors in FrEDI. — get_sectorInfo","title":"This function provides information about the sectors in FrEDI. — get_sectorInfo","text":"helper function returns character vector sector names (default) data frame sectors related information (e.g., associated variants, impact types, etc.), user can supply run_fredi() sectorList argument.","code":""},{"path":"https://usepa.github.io/FrEDI/reference/get_sectorInfo.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"This function provides information about the sectors in FrEDI. — get_sectorInfo","text":"","code":"get_sectorInfo(description = F, gcmOnly = F, slrOnly = F)"},{"path":"https://usepa.github.io/FrEDI/reference/get_sectorInfo.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"This function provides information about the sectors in FrEDI. — get_sectorInfo","text":"description = FALSE. Logical value indicating whether include information sector. Returns dataframe description=TRUE returns character vector sector names description=FALSE (default). gcmOnly = FALSE. Logical value indicating whether return sectors climate impacts modeled using global climate model (GCM) results. slrOnly = FALSE. Logical value indicating whether return sectors climate impacts modeled using sea level rise (SLR) scenarios.","code":""},{"path":"https://usepa.github.io/FrEDI/reference/get_sectorInfo.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"This function provides information about the sectors in FrEDI. — get_sectorInfo","text":"description=FALSE (default), outputs character vector containing names sectors available FrEDI. description=TRUE, `, outputs dataframe containing names sectors available FrEDI one column, information sector model type, variants, impact years, impact types remaining columns.","code":""},{"path":"https://usepa.github.io/FrEDI/reference/get_sectorInfo.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"This function provides information about the sectors in FrEDI. — get_sectorInfo","text":"description=FALSE (default), helper function returns character vector sector names, user can supply sectorList argument run_fredi(). description=TRUE, get_sectorInfo() returns dataframe sectors related information returns dataframe containing sectors available FrEDI along additional information. Sector names first column, additional columns associated model type (\"GCM\" \"SLR\"), variants, impact years, impact types remaining columns. Variants, impact years, impact types vary sector. Users can specify whether return GCM sectors SLR sectors setting gcmOnly=TRUE slrOnly=TRUE, respectively. get_sectorInfo() return sectors form specified description (see ).","code":""},{"path":"https://usepa.github.io/FrEDI/reference/get_sectorInfo.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"This function provides information about the sectors in FrEDI. — get_sectorInfo","text":"Environmental Protection Agency (EPA). 2021. Technical Documentation Framework Evaluating Damages Impacts (FrEDI). Technical Report EPA 430-R-21-004, EPA, Washington, DC. Available https://epa.gov/cira/FrEDI/.","code":""},{"path":"https://usepa.github.io/FrEDI/reference/get_sectorInfo.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"This function provides information about the sectors in FrEDI. — get_sectorInfo","text":"","code":"### Return a character vector with the names of all of the sectors in FrEDI: get_sectorInfo() #>  [1] \"ATS Extreme Temperature\"                   #>  [2] \"Air Quality\"                               #>  [3] \"Asphalt Roads\"                             #>  [4] \"CIL Agriculture\"                           #>  [5] \"CIL Crime\"                                 #>  [6] \"CIL Extreme Temperature\"                   #>  [7] \"Coastal Properties\"                        #>  [8] \"Electricity Demand and Supply\"             #>  [9] \"Electricity Transmission and Distribution\" #> [10] \"Extreme Temperature\"                       #> [11] \"High Tide Flooding and Traffic\"            #> [12] \"Inland Flooding\"                           #> [13] \"Labor\"                                     #> [14] \"Marine Fisheries\"                          #> [15] \"Mental Health\"                             #> [16] \"Rail\"                                      #> [17] \"Roads\"                                     #> [18] \"Southwest Dust\"                            #> [19] \"Urban Drainage\"                            #> [20] \"Valley Fever\"                              #> [21] \"Vibrio\"                                    #> [22] \"Water Quality\"                             #> [23] \"Wildfire\"                                  #> [24] \"Wind Damage\"                               #> [25] \"Winter Recreation\"                          ### Return a dataframe of all of the sectors in FrEDI (sector names and additional information) get_sectorInfo(description=T, gcmOnly=T) #>                                       sector model_type #> 3                    ATS Extreme Temperature        GCM #> 1                                Air Quality        GCM #> 2                              Asphalt Roads        GCM #> 4                            CIL Agriculture        GCM #> 5                                  CIL Crime        GCM #> 6                    CIL Extreme Temperature        GCM #> 8              Electricity Demand and Supply        GCM #> 9  Electricity Transmission and Distribution        GCM #> 10                       Extreme Temperature        GCM #> 12                           Inland Flooding        GCM #> 13                                     Labor        GCM #> 14                          Marine Fisheries        GCM #> 15                             Mental Health        GCM #> 16                                      Rail        GCM #> 17                                     Roads        GCM #> 18                            Southwest Dust        GCM #> 19                            Urban Drainage        GCM #> 20                              Valley Fever        GCM #> 21                                    Vibrio        GCM #> 22                             Water Quality        GCM #> 23                                  Wildfire        GCM #> 24                               Wind Damage        GCM #> 25                         Winter Recreation        GCM  ### Return a character vector with only the names of the temperature-driven sectors: get_sectorInfo(gcmOnly=T) #>  [1] \"ATS Extreme Temperature\"                   #>  [2] \"Air Quality\"                               #>  [3] \"Asphalt Roads\"                             #>  [4] \"CIL Agriculture\"                           #>  [5] \"CIL Crime\"                                 #>  [6] \"CIL Extreme Temperature\"                   #>  [7] \"Electricity Demand and Supply\"             #>  [8] \"Electricity Transmission and Distribution\" #>  [9] \"Extreme Temperature\"                       #> [10] \"Inland Flooding\"                           #> [11] \"Labor\"                                     #> [12] \"Marine Fisheries\"                          #> [13] \"Mental Health\"                             #> [14] \"Rail\"                                      #> [15] \"Roads\"                                     #> [16] \"Southwest Dust\"                            #> [17] \"Urban Drainage\"                            #> [18] \"Valley Fever\"                              #> [19] \"Vibrio\"                                    #> [20] \"Water Quality\"                             #> [21] \"Wildfire\"                                  #> [22] \"Wind Damage\"                               #> [23] \"Winter Recreation\"                          ### Run FrEDI for only the temperature-driven sectors and view results: df_x <- run_fredi(sectorList=get_sectorInfo(gcmOnly=T)) #> Checking input values... #> No temperature scenario provided...using default temperature scenario... #> Creating SLR scenario from temperature scenario... #> No GDP scenario provided...Using default GDP scenario... #> Creating Population scenario from defaults... #> Formatting results... #> \tInterpolating between impact year estimates... #> \tCalculating model averages... #> \tCalculating national totals... #> \tSumming across impact types... #>  #> Finished."},{"path":"https://usepa.github.io/FrEDI/reference/get_sv_sectorInfo.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve a character vector of sectors available in the FrEDI Social Vulnerability (SV) module (run_fredi_sv) or a data frame with SV sectors and additional information. — get_sv_sectorInfo","title":"Retrieve a character vector of sectors available in the FrEDI Social Vulnerability (SV) module (run_fredi_sv) or a data frame with SV sectors and additional information. — get_sv_sectorInfo","text":"get_sv_sectorInfo returns character vector names sectors FrEDI Social Vulnerability (SV) module (default) data frame SV sectors additional information (e.g., associated variants, model type, etc.).","code":""},{"path":"https://usepa.github.io/FrEDI/reference/get_sv_sectorInfo.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve a character vector of sectors available in the FrEDI Social Vulnerability (SV) module (run_fredi_sv) or a data frame with SV sectors and additional information. — get_sv_sectorInfo","text":"","code":"get_sv_sectorInfo(description = F, gcmOnly = F, slrOnly = F)"},{"path":"https://usepa.github.io/FrEDI/reference/get_sv_sectorInfo.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve a character vector of sectors available in the FrEDI Social Vulnerability (SV) module (run_fredi_sv) or a data frame with SV sectors and additional information. — get_sv_sectorInfo","text":"description Logical value indicating whether include information sector. Returns data frame description=TRUE returns character vector sector names description=FALSE (default). gcmOnly Logical value indicating whether return sectors climate impacts modeled using global climate model (GCM) results. slrOnly Logical value indicating whether return sectors climate impacts modeled using sea level rise (SLR) scenarios.","code":""},{"path":"https://usepa.github.io/FrEDI/reference/get_sv_sectorInfo.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve a character vector of sectors available in the FrEDI Social Vulnerability (SV) module (run_fredi_sv) or a data frame with SV sectors and additional information. — get_sv_sectorInfo","text":"get_sv_sectorInfo() return SV sectors form specified description: description=FALSE (default), outputs character vector containing names sectors available FrEDI SV Module. description=TRUE, outputs data frame containing names sectors available FrEDI SV Module one column, information sector model type, model type (\"GCM\" \"SLR\") associated driver unit (\"degrees Celsius\" \"cm\", respectively ), impact units (e.g., mortality, etc.), available variants remaining columns.","code":""},{"path":"https://usepa.github.io/FrEDI/reference/get_sv_sectorInfo.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Retrieve a character vector of sectors available in the FrEDI Social Vulnerability (SV) module (run_fredi_sv) or a data frame with SV sectors and additional information. — get_sv_sectorInfo","text":"get_sv_sectorInfo returns character vector names sectors FrEDI SV module (description=FALSE, default) data frame SV sectors additional information (description=TRUE). description=FALSE (default), get_sv_sectorInfo returns character vector names sectors can passed run_sv_fredi() sector argument. Specify whether return GCM sectors running get_sv_sectorInfo(gcmOnly=TRUE) SLR sectors running get_sv_sectorInfo(slrOnly=TRUE). description=TRUE, get_sv_sectorInfo returns data frame sectors related information, whether particular sector driven primarily temperature (modelType=\"GCM\") sea level rise (modelType=\"SLR\"), associated driver units (\"degrees Celsius\" temperature-driven sectors, \"cm\" SLR-driven sectors), impact units (e.g., mortality, etc.), sector variants. Users can use get_sv_sectorInfo determine sectors can passed run_sv_fredi() sector argument /determine whether particular sector driven primarily temperature (modelType=\"GCM\") sea level rise (modelType=\"SLR\"). Users can specify whether return GCM sectors setting gcmOnly=TRUE SLR sectors setting slrOnly=TRUE.","code":""},{"path":"https://usepa.github.io/FrEDI/reference/get_sv_sectorInfo.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Retrieve a character vector of sectors available in the FrEDI Social Vulnerability (SV) module (run_fredi_sv) or a data frame with SV sectors and additional information. — get_sv_sectorInfo","text":"Environmental Protection Agency (EPA). 2021. Technical Documentation Framework Evaluating Damages Impacts (FrEDI). Technical Report EPA 430-R-21-004, EPA, Washington, DC. Available https://epa.gov/cira/FrEDI/.","code":""},{"path":"https://usepa.github.io/FrEDI/reference/get_sv_sectorInfo.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieve a character vector of sectors available in the FrEDI Social Vulnerability (SV) module (run_fredi_sv) or a data frame with SV sectors and additional information. — get_sv_sectorInfo","text":"","code":"### Return a character vector with the names of all of the sectors in the FrEDI SV Module: get_sv_sectorInfo() #> [1] \"Air Quality - Childhood Asthma\"    \"Air Quality - Premature Mortality\" #> [3] \"Coastal Properties\"                \"Extreme Temperature\"               #> [5] \"High Tide Flooding and Traffic\"    \"Labor\"                             #> [7] \"Roads\"                              ### Return a data frame of all of the sectors in the FrEDI SV Module (sector names and additional information) get_sv_sectorInfo(description=T) #>                              sector modelType      driverUnit #> 1    Air Quality - Childhood Asthma       GCM degrees Celsius #> 2 Air Quality - Premature Mortality       GCM degrees Celsius #> 3                Coastal Properties       SLR              cm #> 4               Extreme Temperature       GCM degrees Celsius #> 5    High Tide Flooding and Traffic       SLR              cm #> 6                             Labor       GCM degrees Celsius #> 7                             Roads       GCM degrees Celsius #>                              variants #> 1                                 N/A #> 2                                 N/A #> 3 Without Adaptation, With Adaptation #> 4                                 N/A #> 5 Without Adaptation, With Adaptation #> 6                                 N/A #> 7 No Adaptation, Proactive Adaptation #>                                        impactUnit #> 1                          Childhood asthma cases #> 2                             Premature Mortality #> 3 Individuals threatened with total property loss #> 4                                       Mortality #> 5                                  Hours of delay #> 6                             Hours of labor lost #> 7                                  Hours of delay  ### Return a character vector with only the names of the temperature-driven sectors: get_sv_sectorInfo(gcmOnly=T) #> [1] \"Air Quality - Childhood Asthma\"    \"Air Quality - Premature Mortality\" #> [3] \"Extreme Temperature\"               \"Labor\"                             #> [5] \"Roads\"                              ### Return a character vector with only the names of the temperature-driven sectors: get_sv_sectorInfo(slrOnly=T) #> [1] \"Coastal Properties\"             \"High Tide Flooding and Traffic\""},{"path":"https://usepa.github.io/FrEDI/reference/import_inputs.html","id":null,"dir":"Reference","previous_headings":"","what":"Import custom scenarios for climate and socioeconomics (temperature and global mean sea level rise (GMSL), population, and GDP) from user-specified file names — import_inputs","title":"Import custom scenarios for climate and socioeconomics (temperature and global mean sea level rise (GMSL), population, and GDP) from user-specified file names — import_inputs","text":"function enables users import data custom scenarios use FREDI (supplied inputs run_fredi()). Users specify path names CSV files containing temperature, global mean sea level rise (GMSL), gross domestic product (GDP), population scenarios. import_inputs() reads format specified files data frames returns list data frames imported scenarios.","code":""},{"path":"https://usepa.github.io/FrEDI/reference/import_inputs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Import custom scenarios for climate and socioeconomics (temperature and global mean sea level rise (GMSL), population, and GDP) from user-specified file names — import_inputs","text":"","code":"import_inputs(   tempfile = NULL,   slrfile = NULL,   popfile = NULL,   gdpfile = NULL,   temptype = \"conus\",   popform = \"wide\" )"},{"path":"https://usepa.github.io/FrEDI/reference/import_inputs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Import custom scenarios for climate and socioeconomics (temperature and global mean sea level rise (GMSL), population, and GDP) from user-specified file names — import_inputs","text":"tempfile character string indicating location CSV file containing custom temperature scenario (first column contains years; second column contains temperatures, degrees Celsius, 1995 baseline year). temperature scenario must start 2000 earlier end maximum model run year (e.g., specified maxYear argument run_fredi()). slrfile character string indicating location CSV file containing custom sea level rise scenario (first column contains years; second column contains values global mean sea level rise (GMSL), centimeters, 2000 baseline). SLR scenario must start 2000 earlier end maximum model run year (e.g., specified maxYear argument run_fredi()). popfile character string indicating location CSV file containing custom population scenario NCA regions. first column contains years interval 2010 2300. number additional columns, column names, column contents depend population format set popform. details, see popform. population scenario must start 2010 earlier end maximum model run year (e.g., specified maxYear argument run_fredi()). gdpfile character string indicating location CSV file containing custom scenario gross domestic product (GDP) (first column contains years; second column contains values GDP, total 2015$). GDP scenario must start 2010 earlier end maximum model run year (e.g., specified maxYear argument run_fredi()). temptype character string indicating whether temperature values temperature input file (specified tempfile represent global temperature change (temptype=\"global\") temperature change contiguous U.S. (temptype=\"conus\") degrees Celsius. default, model assumes temperatures CONUS temperatures (.e., temptype=\"conus\"). popform character string indicating whether populations population input file specified popfile spread across multiple columns (.e., popform=\"wide\") combined single column (.e., popform=\"long\"). default, model assumes popform=\"wide\". formats (popform=\"wide\" popform=\"long\"), first column contains years. popform=\"wide\" (default), second eighth columns popfile  must contain population values NCA region, associated NCA region column name. popform=\"long\", second column must contain NCA region names third column must contain values associated region population.","code":""},{"path":"https://usepa.github.io/FrEDI/reference/import_inputs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Import custom scenarios for climate and socioeconomics (temperature and global mean sea level rise (GMSL), population, and GDP) from user-specified file names — import_inputs","text":"import_inputs() returns list named elements containing data frames custom scenarios temperature, GMSL, GDP, regional population, respectively:","code":""},{"path":"https://usepa.github.io/FrEDI/reference/import_inputs.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Import custom scenarios for climate and socioeconomics (temperature and global mean sea level rise (GMSL), population, and GDP) from user-specified file names — import_inputs","text":"function enables users import data custom scenarios use temperature binning. Users specify path names CSV files containing temperature, global mean sea level rise (GMSL), population, gross domestic product (GDP) scenarios (tempfile, slrfile, gdpfile, popfile, respectively). import_inputs() reads formats specified files data frames returns list data frames imported scenarios. Users can specify whether temperature input contiguous U.S. (CONUS) global using temptype specify format population scenario using popform. Values input scenarios must within reasonable ranges. Temperature GMSL inputs must begin 2000 earlier, whereas values population GDP scenarios can start 2010 earlier. input temperature scenario (passed run_fredi() via inputsList argument) requires temperatures CONUS degrees Celsius relative 1995 (degrees warming relative baseline). Temperature values must greater equal zero degrees warming (CONUS). Users can convert global temperatures CONUS temperatures using convertTemps(=\"global\") specifying import_inputs(temptype=\"global\") importing temperature scenario CSV file. Values sea level rise (SLR) scenario global mean sea level rise (GMSL) must centimeters (cm) values must greater equal zero less equal 250 cm. Population gross domestic product (GDP) values must greater equal zero. population input spread across multiple columns (.e., popform=\"wide\"), columns must named according NCA regions. population input long format, region value must second column. NCA region names population inputs must following character vector: c(\"Midwest\", \"Northeast\", \"Northern.Plains\", \"Northwest\", \"Southeast\", \"Southern.Plains\", \"Southwest\"). regions must present population input file. import_inputs() outputs list data frames can passed main FREDI function run_fredi() using inputList argument. example, specify run_fredi(inputsList=x) generate impacts custom scenario x (x list data frames output import_inputs()) (see run_fredi()). inputs import_inputs() optional. user specify file path tempfile, slrfile, gdpfile, popfile (error reading inputs file paths), import_inputs() outputs list NULL value associated list element. run_fredi() defaults back default scenarios elements inputs list NULL missing. words, running run_fredi(inputsList=list()) returns outputs running run_fredi() (see run_fredi()).","code":""},{"path":"https://usepa.github.io/FrEDI/reference/import_inputs.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Import custom scenarios for climate and socioeconomics (temperature and global mean sea level rise (GMSL), population, and GDP) from user-specified file names — import_inputs","text":"Environmental Protection Agency (EPA). 2021. Technical Documentation Framework Evaluating Damages Impacts (FrEDI). Technical Report EPA 430-R-21-004, EPA, Washington, DC. Available https://epa.gov/cira/FrEDI/.","code":""},{"path":"https://usepa.github.io/FrEDI/reference/import_inputs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Import custom scenarios for climate and socioeconomics (temperature and global mean sea level rise (GMSL), population, and GDP) from user-specified file names — import_inputs","text":"","code":"### Path to example scenarios scenariosPath <- system.file(package=\"FrEDI\") %>% file.path(\"extdata\",\"scenarios\")  ### View example scenario names scenariosPath %>% list.files #> [1] \"GCAM_scenario.csv\" \"pop_scenario.csv\"  \"slr_from_GCAM.csv\"  ### Temperature Scenario File Name tempInputFile <- scenariosPath %>% file.path(\"GCAM_scenario.csv\")  ### SLR Scenario File Name slrInputFile  <- scenariosPath %>% file.path(\"slr_from_gcam.csv\")  ### Population Scenario File Name popInputFile  <- scenariosPath %>% file.path(\"pop_scenario.csv\")  ### Import inputs example_inputsList <- import_inputs(   tempfile = tempInputFile,   slrfile  = slrInputFile,   popfile  = popInputFile,   temptype = \"global\",   popform  = \"wide\" ) #>  #> In import_inputs(): #> \tUser supplied temperature input... #> \t\tImporting data from C:/Users/emcduf01/OneDrive - Environmental Protection Agency (EPA)/Documents/R/R-4.0.3/library/FrEDI/extdata/scenarios/GCAM_scenario.csv... #> \t\tFormatting temperature inputs... #> \t\t\tUser specified `temptype='global'`... #> \t\t\tConverting global temperatures to CONUS temperatures... #> \tUser supplied SLR input... #> \t\tImporting data from C:/Users/emcduf01/OneDrive - Environmental Protection Agency (EPA)/Documents/R/R-4.0.3/library/FrEDI/extdata/scenarios/slr_from_gcam.csv... #> \t\tFormatting SLR inputs... #> \tUser supplied regional population input... #> \t\tImporting data from C:/Users/emcduf01/OneDrive - Environmental Protection Agency (EPA)/Documents/R/R-4.0.3/library/FrEDI/extdata/scenarios/pop_scenario.csv... #> \t\tFormatting regional population inputs... #> \t\t\tUser specified `popform='wide'`...Gathering population by region... #> Finished.  ### Use imports with FREDI: df_x <- run_fredi(inputsList=example_inputsList) #> Checking input values... #> Creating temperature scenario from user inputs... #> Creating SLR scenario from user inputs... #> No GDP scenario provided...Using default GDP scenario... #> Creating Population scenario from user inputs... #> Formatting results... #> \tInterpolating between impact year estimates... #> \tCalculating model averages... #> \tCalculating national totals... #> \tSumming across impact types... #>  #> Finished."},{"path":"https://usepa.github.io/FrEDI/reference/popScenario.html","id":null,"dir":"Reference","previous_headings":"","what":"Population scenario to use as an input to run_fredi_sv() — popScenario","title":"Population scenario to use as an input to run_fredi_sv() — popScenario","text":"dataframe containing population scenario passed input run_fredi_sv().","code":""},{"path":"https://usepa.github.io/FrEDI/reference/popScenario.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Population scenario to use as an input to run_fredi_sv() — popScenario","text":"","code":"popScenario"},{"path":"https://usepa.github.io/FrEDI/reference/popScenario.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Population scenario to use as an input to run_fredi_sv() — popScenario","text":"data frame 133 rows 3 columns: year Year region Region U.S. (\"Midwest\", \"Northeast\", \"Northern Plains\", \"Northwest\", \"Southeast\", \"Southern Plains\", \"Southwest\") reg_pop Regional population associated region year","code":""},{"path":"https://usepa.github.io/FrEDI/reference/popScenario.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Population scenario to use as an input to run_fredi_sv() — popScenario","text":"https://epa.gov/cira/FrEDI/","code":""},{"path":"https://usepa.github.io/FrEDI/reference/popScenario.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Population scenario to use as an input to run_fredi_sv() — popScenario","text":"dataframe contains population projections regional level Integrated Climate Land Use Scenarios version 2 (ICLUSv2) model (Bierwagen et al, 2010; EPA 2017) Median variant projection United Nations (2015). Bierwagen, B., D. M. Theobald, C. R. Pyke, . Choate, P. Groth, J. V. Thomas, P. Morefield. 2010. “National housing impervious surface scenarios integrated climate impact assessments.” Proc. Natl. Acad. Sci. 107 (49): 20887–20892. https://doi.org/10.1073/pnas.1002096107. EPA. 2017. Multi-Model Framework Quantitative Sectoral Impacts Analysis: technical report Fourth National Climate Assessment. U.S. Environmental Protection Agency, EPA 430-R-17-001. United Nations. 2015. World population prospects: 2015 revision. New York: United Nations, Department Economic Social Affairs, Population Division.","code":""},{"path":"https://usepa.github.io/FrEDI/reference/run_fredi.html","id":null,"dir":"Reference","previous_headings":"","what":"Project annual average climate change impacts throughout the 21st century for available sectors — run_fredi","title":"Project annual average climate change impacts throughout the 21st century for available sectors — run_fredi","text":"function allows users project annual average climate change impacts 2300 (2010-2300) available sectors (see get_sectorInfo()). Users may specify optional list custom scenarios. output R data frame object containing annual average impacts, year, sector, variant, impact type, model (GCM SLR scenario), region.","code":""},{"path":"https://usepa.github.io/FrEDI/reference/run_fredi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Project annual average climate change impacts throughout the 21st century for available sectors — run_fredi","text":"","code":"run_fredi(   inputsList = list(tempInput = NULL, slrInput = NULL, gdpInput = NULL, popInput = NULL),   sectorList = NULL,   aggLevels = c(\"national\", \"modelaverage\", \"impactyear\", \"impacttype\"),   elasticity = 0.4,   maxYear = 2090,   thru2300 = FALSE,   pv = FALSE,   baseYear = 2010,   rate = 0.03,   outputList = FALSE,   silent = TRUE )"},{"path":"https://usepa.github.io/FrEDI/reference/run_fredi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Project annual average climate change impacts throughout the 21st century for available sectors — run_fredi","text":"inputsList list named elements named elements (names(inputsList)= c(\"tempInput\", \"slrInput\", \"gdpInput\", \"popInput\")), containing data frames custom temperature, global mean sea level rise (GMSL), gross domestic product (GDP), /population scenarios, respectively, continuous period range 2010 2300. Note: temperature sea level rise inputs start 2000 earlier. Temperature sea level rise inputs start 2000 earlier. Values population GDP scenarios can start 2010 earlier. Values scenario type must within reasonable ranges. information, see import_inputs(). sectorList character vector indicating selection sectors calculate results (see get_sectorInfo()). NULL, sectors included. aggLevels Levels aggregation summarize data: one c(\"national\", \"modelaverage\", \"impactyear\", \"impacttype\", \"\", \"none\"). Defaults levels (.e., aggLevels=\"\"). Uses aggregation levels aggregate_impacts(). thru2300  TRUE/FALSE shortcut overrides maxYear argument run model 2300. pv TRUE/FALSE value indicating whether calculate present values annual impacts. Defaults pv=FALSE. Present values (.e., discounted impacts) calculated discounted_impacts=annual_impacts/(1+rate)^(year-baseYear). Set annual discounting rate base year using baseYear rate. baseYear Base year used calculating present values annual impacts (.e., discounting). Defaults baseYear=2010. rate Annual discount rate used calculating present values annual impacts (.e., discounting). Defaults rate=0.03 (.e., 3% per year). outputList  TRUE/FALSE value indicating whether output results data frame object (outputList=FALSE, default) return list objects (outputList=TRUE) includes information model provenance (including input arguments input scenarios) along data frame results. silent TRUE/FALSE value indicating level messaging desired user (default=TRUE). elasticity=0.4 numeric value indicating elasticity use adjusting VSL applicable sectors impacts (defaults elasticity=0.4). Applicable sectors impacts Air Quality (impact types), ATS Extreme Temperature, CIL Extreme Temperature, Extreme Temperature (impact types), Mental Health, Southwest Dust (Mortality), Valley Fever (Mortality), Vibrio, Wildfire (Mortality). maxYear=2090 numeric value indicating maximum year analysis.","code":""},{"path":"https://usepa.github.io/FrEDI/reference/run_fredi.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Project annual average climate change impacts throughout the 21st century for available sectors — run_fredi","text":"outputList=FALSE, output run_fredi() data frame object containing annual average impacts analysis period, sector, variant, model (GCM SLR scenario), impact type, impact year, region. outputList=TRUE, run_fredi() returns list object containing following: arguments, containing list values arguments passed run_fredi() (exception scenarios passed inputsList argument, provided driverScenarios list element) driverScenarios, list object containing elements driver scenarios temperature, SLR, population, GDP used model results, containing data frame annual average impacts","code":""},{"path":"https://usepa.github.io/FrEDI/reference/run_fredi.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Project annual average climate change impacts throughout the 21st century for available sectors — run_fredi","text":"function allows users project annual average climate change impacts 2300 (2010-2300) available sectors. run_fredi() main function FrEDI R package, described elsewhere (See https://epa.gov/cira/FrEDI information). Users can specify optional list custom scenarios inputsList (information format inputs, see import_inputs()). run_fredi() uses default scenarios temperature, population, GDP inputs specified (.e., inputsList=NULL) empty elements inputs list. user specify input scenario GMSL (.e., inputsList=list(slrInput=NULL), run_fredi() first converts CONUS temperature scenario global temperatures converts global temperatures global mean sea level rise (GMSL) height centimeters. information conversion CONUS temperatures global temperatures, see convertTemps(). information conversion global temperatures GMSL, see temps2slr(). Temperature GMSL inputs must begin 2000 earlier, whereas values population GDP scenarios can start 2010 earlier. Values input scenarios must within reasonable ranges (instance, negative values population GDP non-sensical). user inputs custom scenario values outside allowable ranges, run_fredi() run scenarios instead stop return error message. information, see import_inputs(). input temperature scenario (passed run_fredi() via inputsList argument) requires temperatures CONUS degrees Celsius relative 1995 (degrees warming relative baseline). Temperature values must greater equal zero degrees Celsius (CONUS temperatures). Users can convert global temperatures CONUS temperatures using FrEDI::convertTemps(=\"global\") specifying FrEDI::import_inputs(temptype=\"global\") importing temperature scenario CSV file. Values sea level rise (SLR) scenario global mean sea level rise (GMSL) must centimeters (cm) values must greater equal zero less equal 250 cm. Population gross domestic product (GDP) values must greater equal zero. inputsList=NULL, run_fredi() uses defaults scenarios. Otherwise, run_fredi() looks list object passed argument inputsList. Within list, run_fredi() looks list elements tempInput, slrInput, gdpInput, popInput containing data frames custom scenarios temperature, GMSL, GDP, regional population, respectively. run_fredi() default back default scenarios list elements NULL missing. words, running run_fredi(inputsList=list()) returns outputs running run_fredi(). help importing custom scenarios CSV files, refer pre-processing function import_inputs(). run_fredi() linearly interpolates missing annual values input scenarios using non-missing values (requires least two non-missing values). Temperatures interpolated using 1995 baseline year (.e., central year 1986-2005 baseline). words, temperature (degrees Celsius) set zero year 1995 GMSL set zero year 2000. interpolated temperature GMSL scenarios combined column called driverValue, along additional columns year, driver unit (column \"driverUnit\", driverUnit=\"degrees Celsius\" driverUnit=\"cm\" temperature- SLR-driven sectors, respectively), associated model type (column \"model_type\", model_type=\"GCM\" model_type=\"SLR\" temperature- SLR-driven sectors, respectively). population scenario must provide annual regional values population, national totals calculated regional values. FrEDI uses national population scenario GDP scenario calculate GDP per capita. Values regional population, national population, national GDP (2015$), national per capita GDP (2015$/capita) provided results data frame columns \"reg_pop\", \"national_pop\", \"gdp_usd\", \"gdp_percap\", respectively. default, run_fredi() calculate impacts sectors included tool. Alternatively, users can pass character vector specifying single sector subset sectors using sectorList argument. see list sectors included within FrEDI, run get_sectorInfo(). sectorList=NULL (default), sectors included. run_fredi() aggregates summarizes results level(s) aggregation specified user (passed aggLevels) using post-processing helper function aggregate_impacts(). Users can specify single aggregation level multiple aggregation levels passing single character string character vector aggLevels. Options aggregation include calculating national totals (aggLevels=\"national\"), averaging across model types models (aggLevels=\"modelaverage\"), summing impact types (aggLevels=\"impacttype\"), interpolating impact year estimates (aggLevels=\"impactYear\"). Users can specify aggregation levels specifying aggLevels=\"\" (default) aggregation levels (aggLevels=\"none\"). aggLevels, run_fredi() performs following calculations using aggregate_impacts() (note \"variant\" column referred contains information variant (adaptation) name “N/”, applicable): Annual impacts sector, variant, impact type, impact year combination included model calculated multiplying scaled climate impacts physical scalar economic scalars multipliers. sectors use Value Statistical Life (VSL) adjust value non-linearly time. run_fredi() uses default value elasticity=0.4to adjust VSL applicable sectors impacts. Applicable sectors impacts Air Quality (impact types), ATS Extreme Temperature, CIL Extreme Temperature, Extreme Temperature (impact types), Mental Health, Southwest Dust (Mortality), Valley Fever (Mortality), Vibrio, Wildfire (Mortality). custom elasticity can passed elasticity argument; keep VSL constant time, specify elasticity=1. default, run_fredi() calculates impacts starting year 2010 ending 2090. Specify alternative end year analysis using maxYear argument (defaults maxYear=2090). minimum maximum valid values maxYear maxYear=2011 maxYear=2300, respectively. Alternatively, run model year 2300 specifying thru2300=TRUE (override maxYear argument set maxYear=2300). Note default scenarios included within FrEDI stop year 2090; get non-zero/non-missing values years 2090, users must specify maxYear 2090 also provide custom input scenarios desired end year. Users can choose calculate present values annual impacts (.e., discounted impacts), setting pv=TRUE (defauts pv=FALSE). pv=TRUE, discounted impacts calculated using base year annual discount rate discounted_impacts=annual_impacts/(1+rate)^(year-baseYear). Set base year annual discount rate using baseYear (defaults baseYear=2010) rate (defaults 3% .e., rate=0.03), respectively. run_fredi() defaults returning data frame annual average impacts analysis period, sector, variant, model (GCM SLR scenario), impact type, impact year, region (outputList=FALSE). outputList=TRUE, run_fredi() returns list object containing information values function arguments driver scenarios addition data frame impacts","code":""},{"path":"https://usepa.github.io/FrEDI/reference/run_fredi.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Project annual average climate change impacts throughout the 21st century for available sectors — run_fredi","text":"Environmental Protection Agency (EPA). 2021. Technical Documentation Framework Evaluating Damages Impacts (FrEDI). Technical Report EPA 430-R-21-004, EPA, Washington, DC. Available https://epa.gov/cira/FrEDI/.","code":""},{"path":"https://usepa.github.io/FrEDI/reference/run_fredi.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Project annual average climate change impacts throughout the 21st century for available sectors — run_fredi","text":"","code":"### Load FrEDI require(FrEDI)  ### Run function with defaults (same as `defaultResults` dataset) run1 <- run_fredi() #> Checking input values... #> No temperature scenario provided...using default temperature scenario... #> Creating SLR scenario from temperature scenario... #> No GDP scenario provided...Using default GDP scenario... #> Creating Population scenario from defaults... #> Formatting results... #> \tInterpolating between impact year estimates... #> \tCalculating model averages... #> \tCalculating national totals... #> \tSumming across impact types... #>  #> Finished.  ### Load climate scenarios and glimpse data data(\"gcamScenarios\") gcamScenarios %>% glimpse #> Rows: 546 #> Columns: 4 #> $ year     <dbl> 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2~ #> $ temp_C   <dbl> 0.1804171, 0.2001162, 0.2198154, 0.2395145, 0.2592137, 0.2789~ #> $ slr_cm   <dbl> 0.0000000, 0.2660846, 0.5362304, 0.8104140, 1.0886122, 1.3708~ #> $ scenario <chr> \"ECS_3.0_ref_0\", \"ECS_3.0_ref_0\", \"ECS_3.0_ref_0\", \"ECS_3.0_r~  ### Load population scenario and glimpse data data(popScenario) popScenario %>% glimpse #> Rows: 133 #> Columns: 3 #> $ year    <dbl> 2000, 2005, 2010, 2015, 2020, 2025, 2030, 2035, 2040, 2045, 20~ #> $ region  <chr> \"Midwest\", \"Midwest\", \"Midwest\", \"Midwest\", \"Midwest\", \"Midwes~ #> $ reg_pop <dbl> 58596051, 59678411, 60760771, 62531700, 64097103, 65655846, 66~  ### Subset climate scenario temps1 <- gcamScenarios %>% filter(scenario==\"ECS_3.0_ref_0\") %>% select(year, temp_C)  ### Run custom scenario run2 <- run_fredi(inputsList=list(tempInput=temps1, popInput=popScenario)) #> Checking input values... #> Creating temperature scenario from user inputs... #> Creating SLR scenario from temperature scenario... #> No GDP scenario provided...Using default GDP scenario... #> Creating Population scenario from user inputs... #> Formatting results... #> \tInterpolating between impact year estimates... #> \tCalculating model averages... #> \tCalculating national totals... #> \tSumming across impact types... #>  #> Finished.  ### Load scenarios from file: scenariosPath <- system.file(package=\"FrEDI\") %>% file.path(\"extdata\",\"scenarios\") scenariosPath %>% list.files #> [1] \"GCAM_scenario.csv\" \"pop_scenario.csv\"  \"slr_from_GCAM.csv\"  ### Temperature Scenario File Name tempInputFile <- scenariosPath %>% file.path(\"GCAM_scenario.csv\")  ### SLR Scenario File Name slrInputFile  <- scenariosPath %>% file.path(\"slr_from_GCAM.csv\")  ### Population Scenario File Name popInputFile  <- scenariosPath %>% file.path(\"pop_scenario.csv\")  ### Import inputs x_inputs <- import_inputs(   tempfile = tempInputFile,   slrfile  = slrInputFile,   popfile  = popInputFile ) #>  #> In import_inputs(): #> \tUser supplied temperature input... #> \t\tImporting data from C:/Users/emcduf01/OneDrive - Environmental Protection Agency (EPA)/Documents/R/R-4.0.3/library/FrEDI/extdata/scenarios/GCAM_scenario.csv... #> \t\tFormatting temperature inputs... #> \tUser supplied SLR input... #> \t\tImporting data from C:/Users/emcduf01/OneDrive - Environmental Protection Agency (EPA)/Documents/R/R-4.0.3/library/FrEDI/extdata/scenarios/slr_from_GCAM.csv... #> \t\tFormatting SLR inputs... #> \tUser supplied regional population input... #> \t\tImporting data from C:/Users/emcduf01/OneDrive - Environmental Protection Agency (EPA)/Documents/R/R-4.0.3/library/FrEDI/extdata/scenarios/pop_scenario.csv... #> \t\tFormatting regional population inputs... #> \t\t\tUser specified `popform='wide'`...Gathering population by region... #> Finished.  ### Run custom scenarios run3 <- run_fredi(inputsList=x_inputs) #> Checking input values... #> Creating temperature scenario from user inputs... #> Creating SLR scenario from user inputs... #> No GDP scenario provided...Using default GDP scenario... #> Creating Population scenario from user inputs... #> Formatting results... #> \tInterpolating between impact year estimates... #> \tCalculating model averages... #> \tCalculating national totals... #> \tSumming across impact types... #>  #> Finished.  ### Get information on sectors: get_sectorInfo() #>  [1] \"ATS Extreme Temperature\"                   #>  [2] \"Air Quality\"                               #>  [3] \"Asphalt Roads\"                             #>  [4] \"CIL Agriculture\"                           #>  [5] \"CIL Crime\"                                 #>  [6] \"CIL Extreme Temperature\"                   #>  [7] \"Coastal Properties\"                        #>  [8] \"Electricity Demand and Supply\"             #>  [9] \"Electricity Transmission and Distribution\" #> [10] \"Extreme Temperature\"                       #> [11] \"High Tide Flooding and Traffic\"            #> [12] \"Inland Flooding\"                           #> [13] \"Labor\"                                     #> [14] \"Marine Fisheries\"                          #> [15] \"Mental Health\"                             #> [16] \"Rail\"                                      #> [17] \"Roads\"                                     #> [18] \"Southwest Dust\"                            #> [19] \"Urban Drainage\"                            #> [20] \"Valley Fever\"                              #> [21] \"Vibrio\"                                    #> [22] \"Water Quality\"                             #> [23] \"Wildfire\"                                  #> [24] \"Wind Damage\"                               #> [25] \"Winter Recreation\"                          ### Run for a single sector, with default inputs, no aggregation, and elasticity=1: run4 <- run_fredi(sectorList=\"ATS Extreme Temperature\", aggLevels=\"none\", elasticity=1) #> Checking input values... #> No temperature scenario provided...using default temperature scenario... #> Creating SLR scenario from temperature scenario... #> No GDP scenario provided...Using default GDP scenario... #> Creating Population scenario from defaults... #> Formatting results... #>  #> Finished.  ### Set end year for analysis to 2100 using default scenarios (values after 2090 will all be missing, since default scenarios only have values out to 2090) run5 <- run_fredi(maxYear=2100) #> Checking input values... #> No temperature scenario provided...using default temperature scenario... #> Creating SLR scenario from temperature scenario... #> No GDP scenario provided...Using default GDP scenario... #> Creating Population scenario from defaults... #> Formatting results... #> \tInterpolating between impact year estimates... #> \tCalculating model averages... #> \tCalculating national totals... #> \tSumming across impact types... #>  #> Finished.  ### Set end year for analysis to 2300 using default scenarios (values after 2090 will all be missing, since default scenarios only have values out to 2090) run6 <- run_fredi(thru2300=TRUE) #> Checking input values... #> No temperature scenario provided...using default temperature scenario... #> Creating SLR scenario from temperature scenario... #> No GDP scenario provided...Using default GDP scenario... #> Creating Population scenario from defaults... #> Formatting results... #> \tInterpolating between impact year estimates... #> \tCalculating model averages... #> \tCalculating national totals... #> \tSumming across impact types... #>  #> Finished.  ### Run FrEDI, calculate discounted impacts, and return output list run7 <- run_fredi(pv=TRUE, baseYear=2020, rate=0.3, outputList=TRUE) #> Checking input values... #> No temperature scenario provided...using default temperature scenario... #> Creating SLR scenario from temperature scenario... #> No GDP scenario provided...Using default GDP scenario... #> Creating Population scenario from defaults... #> Formatting results... #> \tInterpolating between impact year estimates... #> \tCalculating model averages... #> \tCalculating national totals... #> \tSumming across impact types... #>  #> Finished."},{"path":"https://usepa.github.io/FrEDI/reference/run_fredi_sv.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate climate change impacts on socially vulnerable (SV) populations throughout the 21st century for available sectors — run_fredi_sv","title":"Calculate climate change impacts on socially vulnerable (SV) populations throughout the 21st century for available sectors — run_fredi_sv","text":"run_fredi_sv allows users project annual average climate change impacts throughout 21st century (2010-2090) socially vulnerable (SV) populations available sectors. Users can run run_fredi_sv() individual sectors generate annual physical impacts SV populations. run_fredi_sv() can run default population climate (temperature sea level rise trajectories) provide custom trajectories. output run_fredi_sv() R data frame object containing annual average physical impacts five-year increments period 2010 2090. Users option write outputs Excel files provide additional visualization SV outputs.","code":""},{"path":"https://usepa.github.io/FrEDI/reference/run_fredi_sv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate climate change impacts on socially vulnerable (SV) populations throughout the 21st century for available sectors — run_fredi_sv","text":"","code":"run_fredi_sv(   sector = NULL,   driverInput = NULL,   popInput = NULL,   silent = TRUE,   save = FALSE,   outpath = getwd(),   overwrite = FALSE,   addDate = FALSE,   .testing = FALSE )"},{"path":"https://usepa.github.io/FrEDI/reference/run_fredi_sv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate climate change impacts on socially vulnerable (SV) populations throughout the 21st century for available sectors — run_fredi_sv","text":"sector character string indicating sector FrEDI SV module calculate impacts (see get_sv_sectorInfo() list available sectors). driverInput data frame four custom scenarios drivers (temperature global mean sea level rise). driverInput requires data frame columns \"year\" \"scenario\". data frame must also include third column: \"temp_C\" temperature-driven sectors (containing temperature values degrees Celsius warming contiguous U.S.) \"slr_cm\" sea level rise (SLR)-driven sectors (containing values global mean sea level rise centimeters). Run get_sv_sectorInfo(gcmOnly=TRUE) see temperature-driven sectors SV module get_sv_sectorInfo(slrOnly=TRUE) see SLR-driven scenarios. Users can also pass data frame four columns (\"year\", \"scenario\", \"temp_C\", \"slr_cm\"), case run_fredi_sv() determines whether use \"temp_C\" \"slr_cm\" column driver trajectory based specified sector. Driver inputs scenarios start year 2000 earlier. scenarios must include least two non-missing values  (especially values 2000 2090). required columns missing, run_fredi_sv() use default temperature sea level rise scenario run_fredi(). data frame passed driverInput four unique scenarios, run_fredi_sv() run first four scenarios. popInput data frame containing regional population trajectories seven regions contiguous U.S. (\"Midwest\", \"Northeast\", \"Northern Plains\", \"Northwest\", \"Southeast\", \"Southern Plains\", \"Southwest\") defined National Climate Assessment (NCA). data frame passed popInput columns \"year\", \"region\", \"reg_pop\", respectively contain values year, NCA region name, regional population. popInput accepts data frame single scenario; run_fredi_sv() uses population scenario driver scenarios data frame passed driverInput. popInput=NULL (default), run_fredi_sv() use default regional population trajectories. silent logical (TRUE/FALSE) value indicating level messaging desired user (defaults silent=TRUE). save logical (TRUE/FALSE) value indicating whether save results Excel file (defaults save=FALSE). outpath character string indicating file directory save Excel file. Defaults working directory, .e. outpath=getwd(). directory specified outpath exist, run_fredi_sv() attempt create specified directory. overwrite logical (TRUE/FALSE) value indicating whether overwrite existing Excel file save=TRUE (defaults overwrite=FALSE). overwrite=FALSE, run_fredi_sv() automatically overwrite existing Excel file; however, file exists overwrite=FALSE, run_fredi_sv() message user user option overwrite existing file. overwrite=TRUE Excel file exists output directory, run_fredi_sv() overwrite existing file without messaging user. addDate logical (TRUE/FALSE) value indicating whether add date name output Excel file save=TRUE (defaults addDate=FALSE). save=TRUE addDate=TRUE, run_fredi_sv() append system date beginning name outputs Excel file using format \"%Y%m%d\" (see base::format() base::Sys.Date() additional information).","code":""},{"path":"https://usepa.github.io/FrEDI/reference/run_fredi_sv.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate climate change impacts on socially vulnerable (SV) populations throughout the 21st century for available sectors — run_fredi_sv","text":"output run_fredi_sv() R data frame object containing NCA region-specific annual average physical impacts socially vulnerable groups five-year increments 2010 2090. optional output run_fredi_sv() Excel file containing output data frame basic visualizations sector outputs.","code":""},{"path":"https://usepa.github.io/FrEDI/reference/run_fredi_sv.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate climate change impacts on socially vulnerable (SV) populations throughout the 21st century for available sectors — run_fredi_sv","text":"run_fredi_sv() projects annual climate change impacts socially vulnerable (SV) populations throughout 21st century (2010-2090) available sectors, using default user-specified population, temperature, sea level rise (SLR) trajectories. run_fredi_sv() main function FrEDI Social Vulnerability (SV) module FrEDI R package, described elsewhere (See https://epa.gov/cira/FrEDI information). SV module extends FrEDI framework socially vulnerable populations using data underlying 2021 U.S. Environmental Protection Agency (EPA) report Climate Change Social Vulnerability United States. Users can run run_fredi_sv() generate annual physical impacts SV groups individual sectors. running run_fredi_sv(), users must specify one sectors SV module; use get_sv_sectorInfo() list available sectors. run_fredi_sv() can run default population climate (temperature SLR) trajectories use run_fredi_sv() run custom scenarios. Running run_fredi_sv() custom climate scenarios requires passing data frame scenarios driverInput argument. run_fredi_sv() can also run custom population scenario passing data frame regional population trajectories popInput argument; unlike climate scenarios, run_fredi_sv() run single scenario time. driverInput can take data frame containing four custom scenarios drivers (temperature global mean sea level rise). driverInput requires data frame columns \"year\" \"scenario\". data frame must also include third column: \"temp_C\" temperature-driven sectors (containing temperature values degrees Celsius warming contiguous U.S.) \"slr_cm\" sea level rise (SLR)-driven sectors (containing values global mean sea level rise centimeters). Run get_sv_sectorInfo(gcmOnly=TRUE) see temperature-driven sectors SV module get_sv_sectorInfo(slrOnly=TRUE) see SLR-driven scenarios. Users can also pass data frame four columns (\"year\", \"scenario\", \"temp_C\", \"slr_cm\"), case run_fredi_sv() determines whether use \"temp_C\" \"slr_cm\" column driver trajectory based specified sector. required columns missing, run_fredi_sv() use default temperature sea level rise scenario run_fredi(). data frame passed driverInput four unique scenarios, run_fredi_sv() run first four scenarios. Temperature inputs must temperature change degrees Celsius contiguous U.S. (use convertTemps() convert global temperatures CONUS temperatures passing driverInput) relative 1995 baseline (1995 central year 1986-2005 baseline period; values start zero year 1995). Sea level rise inputs must centimeters relative 2000 baseline (.e., values start zero year 2000). Driver inputs scenarios start year 2000 earlier. scenarios must include least two non-missing values  (especially values 2000 2090). popInput can take data frame containing single scenario regional population trajectories seven regions contiguous U.S. (\"Midwest\", \"Northeast\", \"Northern Plains\", \"Northwest\", \"Southeast\", \"Southern Plains\", \"Southwest\") defined National Climate Assessment (NCA). data frame passed popInput columns \"year\", \"region\", \"reg_pop\", respectively contain values year, NCA region name, regional population. popInput accepts data frame single scenario; run_fredi_sv() uses population scenario driver scenarios data frame passed driverInput. popInput=NULL (default), run_fredi_sv() use default regional population trajectories. default regional population scenario drawn Integrated Climate Land Use Scenarios version 2 (ICLUSv2) model (Bierwagen et al, 2010; EPA 2017) Median variant projection United Nations (United Nations, 2015). Note FrEDI SV default population scenario differs default population scenario used run_fredi(). output run_fredi_sv() R data frame object containing NCA region-specific annual average physical impacts socially vulnerable groups five-year increments 2010 2090. Users additional option write results Excel file setting save=TRUE; output Excel files provide basic visualizations output data. Additional arguments provide control outputs saved save=TRUE: outpath can used specify directory save Excel output file. Defaults outpath=getwd() (.e., working directory). directory specified outpath exist, run_fredi_sv() attempt create specified directory. overwrite can used force run_fredi_sv() overwrite existing Excel file output directory.  overwrite=FALSE, run_fredi_sv() automatically overwrite existing Excel file; however, file exists overwrite=FALSE, run_fredi_sv() message user user option overwrite existing file. overwrite=TRUE Excel file exists output directory, run_fredi_sv() overwrite existing file without messaging user. addDate can used append date output Excel file. save=TRUE addDate=TRUE, run_fredi_sv() append system date beginning name outputs Excel file using format \"%Y%m%d\" (see base::format() base::Sys.Date() additional information).","code":""},{"path":"https://usepa.github.io/FrEDI/reference/run_fredi_sv.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Calculate climate change impacts on socially vulnerable (SV) populations throughout the 21st century for available sectors — run_fredi_sv","text":"Bierwagen, B., D. M. Theobald, C. R. Pyke, . Choate, P. Groth, J. V. Thomas, P. Morefield. 2010. “National housing impervious surface scenarios integrated climate impact assessments.” Proc. Natl. Acad. Sci. 107 (49): 20887–20892. https://doi.org/10.1073/pnas.1002096107. EPA. 2017. Multi-Model Framework Quantitative Sectoral Impacts Analysis: technical report Fourth National Climate Assessment. U.S. Environmental Protection Agency, EPA 430-R-17-001. EPA. 2021. Technical Documentation Framework Evaluating Damages Impacts (FrEDI). U.S. Environmental Protection Agency, EPA 430-R-21-004. Available https://epa.gov/cira/FrEDI/. EPA. 2021. Climate Change Social Vulnerability United States: Focus Six Impacts. U.S. Environmental Protection Agency, EPA 430-R-21-003. Available https://www.epa.gov/cira/social-vulnerability-report/. United Nations. 2015. World population prospects: 2015 revision. New York: United Nations, Department Economic Social Affairs, Population Division. U.S. Global Change Research Program. 2015. Scenarios National Climate Assessment. Available https://scenarios.globalchange.gov/regions_nca4.","code":""},{"path":"https://usepa.github.io/FrEDI/reference/run_fredi_sv.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate climate change impacts on socially vulnerable (SV) populations throughout the 21st century for available sectors — run_fredi_sv","text":"","code":"### Run SV Module with defaults without specifying sector df_sv <- run_fredi_sv() #> [1] \"Please select a sector: \" #> [1] \"1. Air Quality - Childhood Asthma\" #> [1] \"2. Air Quality - Premature Mortality\" #> [1] \"3. Labor\" #> [1] \"4. Extreme Temperature\" #> [1] \"5. Roads\" #> [1] \"6. High Tide Flooding and Traffic\" #> [1] \"7. Coastal Properties\" #> Running FrEDI SV for sector 'Air Quality - Childhood Asthma': #>  #> \tPreparing driver scenario... #> \t\tUsing default temperature scenario... #>  #> \tPreparing population scenario... #> \t\tUsing default population scenario... #> \t\tCalculating county population from regional population... #>  #> \tCalculating impacts for sector='Air Quality - Childhood Asthma', variant='N/A', scenario='FrEDI Default'... #> \t\tCalculating scaled impacts for each tract... #> \t\t \tFinished calculating tract-level impacts. #> \t\tCalculating total impacts for each tract... #> \t\t\t\t... #> \t\t\t\t\t\t\t\t... #> \t\t\t\t\t\t\t\t... #> \t\t\t\t\t... #> \t\t\t\t\t\t\t\t... #> \t\t\t\t\t... #> \t\t\tFinished calculating total impacts. #> \tFinished.  ### Return a character vector with the names of all of the sectors in the FrEDI SV Module: get_sv_sectorInfo() #> [1] \"Air Quality - Childhood Asthma\"    \"Air Quality - Premature Mortality\" #> [3] \"Coastal Properties\"                \"Extreme Temperature\"               #> [5] \"High Tide Flooding and Traffic\"    \"Labor\"                             #> [7] \"Roads\"                              ### Return a data frame of all of the sectors in the FrEDI SV Module (sector names and additional information) get_sv_sectorInfo(description=T) #>                              sector modelType      driverUnit #> 1    Air Quality - Childhood Asthma       GCM degrees Celsius #> 2 Air Quality - Premature Mortality       GCM degrees Celsius #> 3                Coastal Properties       SLR              cm #> 4               Extreme Temperature       GCM degrees Celsius #> 5    High Tide Flooding and Traffic       SLR              cm #> 6                             Labor       GCM degrees Celsius #> 7                             Roads       GCM degrees Celsius #>                              variants #> 1                                 N/A #> 2                                 N/A #> 3 Without Adaptation, With Adaptation #> 4                                 N/A #> 5 Without Adaptation, With Adaptation #> 6                                 N/A #> 7 No Adaptation, Proactive Adaptation #>                                        impactUnit #> 1                          Childhood asthma cases #> 2                             Premature Mortality #> 3 Individuals threatened with total property loss #> 4                                       Mortality #> 5                                  Hours of delay #> 6                             Hours of labor lost #> 7                                  Hours of delay  ### Run SV Module with defaults for \"Coastal Properties\" without saving df_sv <- run_fredi_sv(sector=\"Coastal Properties\") #> Running FrEDI SV for sector 'Coastal Properties': #>  #> \tPreparing driver scenario... #> \t\tUsing default temperature scenario... #> \t\tCreating SLR scenario from temperature scenario... #>  #> \tPreparing population scenario... #> \t\tUsing default population scenario... #> \t\tCalculating county population from regional population... #>  #> \tCalculating impacts for sector='Coastal Properties', variant='Without Adaptation', scenario='FrEDI Default'... #> \t\tCalculating scaled impacts for each tract... #> \t\t \tFinished calculating tract-level impacts. #> \t\tCalculating total impacts for each tract... #> \t\t\t\t... #> \t\t\t\t\t\t\t\t... #> \t\t\t\t\t\t\t\t... #> \t\t\t\t\t... #> \t\t\t\t\t\t\t\t... #> \t\t\t\t\t... #> \t\t\tFinished calculating total impacts. #>  #> \tCalculating impacts for sector='Coastal Properties', variant='With Adaptation', scenario='FrEDI Default'... #> \t\tCalculating scaled impacts for each tract... #> \t\t \tFinished calculating tract-level impacts. #> \t\tCalculating total impacts for each tract... #> \t\t\t\t... #> \t\t\t\t\t\t\t\t... #> \t\t\t\t\t\t\t\t... #> \t\t\t\t\t... #> \t\t\t\t\t\t\t\t... #> \t\t\t\t\t... #> \t\t\tFinished calculating total impacts. #> \tFinished.  ### Run SV Module with defaults for \"Extreme Temperature\" without saving df_sv <- run_fredi_sv(sector=\"Extreme Temperature\") #> Running FrEDI SV for sector 'Extreme Temperature': #>  #> \tPreparing driver scenario... #> \t\tUsing default temperature scenario... #>  #> \tPreparing population scenario... #> \t\tUsing default population scenario... #> \t\tCalculating county population from regional population... #>  #> \tCalculating impacts for sector='Extreme Temperature', variant='N/A', scenario='FrEDI Default'... #> \t\tCalculating scaled impacts for each tract... #> \t\t \tFinished calculating tract-level impacts. #> \t\tCalculating total impacts for each tract... #> \t\t\t\t... #> \t\t\t\t\t\t\t\t... #> \t\t\t\t\t\t\t\t... #> \t\t\t\t\t... #> \t\t\t\t\t\t\t\t... #> \t\t\t\t\t... #> \t\t\tFinished calculating total impacts. #> \tFinished.  ### Run SV Module with defaults for \"Extreme Temperature\" with saving and add date to file name df_sv <- run_fredi_sv(sector=\"Extreme Temperature\", save=T, addDate=T) #> Running FrEDI SV for sector 'Extreme Temperature': #>  #> \tPreparing driver scenario... #> \t\tUsing default temperature scenario... #>  #> \tPreparing population scenario... #> \t\tUsing default population scenario... #> \t\tCalculating county population from regional population... #>  #> \tCalculating impacts for sector='Extreme Temperature', variant='N/A', scenario='FrEDI Default'... #> \t\tCalculating scaled impacts for each tract... #> \t\t \tFinished calculating tract-level impacts. #> \t\tCalculating total impacts for each tract... #> \t\t\t\t... #> \t\t\t\t\t\t\t\t... #> \t\t\t\t\t\t\t\t... #> \t\t\t\t\t... #> \t\t\t\t\t\t\t\t... #> \t\t\t\t\t... #> \t\t\tFinished calculating total impacts. #> \tSaving results to Excel... #> \tFinished.  ### Load temperature scenarios load(gcamScenarios) #> Error in load(gcamScenarios): bad 'file' argument  ### Load population scenario load(popScenario) #> Error in load(popScenario): bad 'file' argument  ### Run SV Module for \"Extreme Temperature\" with custom population and temperature scenarios. Save and overwrite previous results df_sv <- run_fredi_sv(sector=\"Extreme Temperature\", driverInput = gcamScenarios, popInput = popScenario, save=T, addDate=T, overwrite = T) #> Running FrEDI SV for sector 'Extreme Temperature': #> \tChecking `driverInput` values... #> \tChecking scenarios in `driverInput`... #> \t\tWarning: `driverInput` has more than four distinct scenarios! #> \t\t\tOnly the first four scenarios will be used... #> \tChecking `driverInput` values for temperature scenario... #> \t\tAll temperature scenario columns present... #> \tChecking `popInput` values... #> \t\tAll population scenario columns present in `popInput`... #>  #> \tPreparing driver scenario... #> \t\tUsing temperature scenario from user inputs... #>  #> \tPreparing population scenario... #> \t\tCreating population scenario from user inputs... #> \t\tCalculating county population from regional population... #>  #> \tCalculating impacts for sector='Extreme Temperature', variant='N/A', scenario='ECS_3.0_ref_0'... #> \t\tCalculating scaled impacts for each tract... #> \t\t \tFinished calculating tract-level impacts. #> \t\tCalculating total impacts for each tract... #> \t\t\t\t... #> \t\t\t\t\t\t\t\t... #> \t\t\t\t\t\t\t\t... #> \t\t\t\t\t... #> \t\t\t\t\t\t\t\t... #> \t\t\t\t\t... #> \t\t\tFinished calculating total impacts. #>  #> \tCalculating impacts for sector='Extreme Temperature', variant='N/A', scenario='ECS_3.0_ref_90'... #> \t\tCalculating scaled impacts for each tract... #> \t\t \tFinished calculating tract-level impacts. #> \t\tCalculating total impacts for each tract... #> \t\t\t\t... #> \t\t\t\t\t\t\t\t... #> \t\t\t\t\t\t\t\t... #> \t\t\t\t\t... #> \t\t\t\t\t\t\t\t... #> \t\t\t\t\t... #> \t\t\tFinished calculating total impacts. #>  #> \tCalculating impacts for sector='Extreme Temperature', variant='N/A', scenario='ECS_3.0_ref_70'... #> \t\tCalculating scaled impacts for each tract... #> \t\t \tFinished calculating tract-level impacts. #> \t\tCalculating total impacts for each tract... #> \t\t\t\t... #> \t\t\t\t\t\t\t\t... #> \t\t\t\t\t\t\t\t... #> \t\t\t\t\t... #> \t\t\t\t\t\t\t\t... #> \t\t\t\t\t... #> \t\t\tFinished calculating total impacts. #>  #> \tCalculating impacts for sector='Extreme Temperature', variant='N/A', scenario='ECS_3.0_ref_50'... #> \t\tCalculating scaled impacts for each tract... #> \t\t \tFinished calculating tract-level impacts. #> \t\tCalculating total impacts for each tract... #> \t\t\t\t... #> \t\t\t\t\t\t\t\t... #> \t\t\t\t\t\t\t\t... #> \t\t\t\t\t... #> \t\t\t\t\t\t\t\t... #> \t\t\t\t\t... #> \t\t\tFinished calculating total impacts. #> \tSaving results to Excel... #> \tFinished."},{"path":"https://usepa.github.io/FrEDI/reference/temps2slr.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert global temperature change in degrees Celsius to global mean sea level rise (GMSL) in centimeters — temps2slr","title":"Convert global temperature change in degrees Celsius to global mean sea level rise (GMSL) in centimeters — temps2slr","text":"pre-processing helper function converts vector global temperatures global mean sea level rise (GMSL). function adapts method described Kopp et al. (2016) (see references, ).","code":""},{"path":"https://usepa.github.io/FrEDI/reference/temps2slr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert global temperature change in degrees Celsius to global mean sea level rise (GMSL) in centimeters — temps2slr","text":"","code":"temps2slr(temps, years)"},{"path":"https://usepa.github.io/FrEDI/reference/temps2slr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert global temperature change in degrees Celsius to global mean sea level rise (GMSL) in centimeters — temps2slr","text":"temps numeric vector global temperatures degrees Celsius. temperature series corresponding years must begin 2000 earlier. years numeric vector years (common era) corresponding temperatures provided temps. temperature series corresponding years must begin 2000 earlier.","code":""},{"path":"https://usepa.github.io/FrEDI/reference/temps2slr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert global temperature change in degrees Celsius to global mean sea level rise (GMSL) in centimeters — temps2slr","text":"Outputs data frame two columns: year, years years input fall within range 2000 2090 slr_cm GMSL centimeters.","code":""},{"path":"https://usepa.github.io/FrEDI/reference/temps2slr.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Convert global temperature change in degrees Celsius to global mean sea level rise (GMSL) in centimeters — temps2slr","text":"function converts temperature scenario (global temperatures degrees Celsius) SLR scenario use estimate impacts global mean sea level rise (GMSL) affected sectors. temps2slr() implements method described Kopp et al., 2016, \"Temperature-driven global sea-level variability Common Era\" (see references, ). Kopp et al.'s \"semiempirical\" sea-level model relates rate global sea level (GSL) rise \\(\\frac{dh}{dt}\\) global mean temperature \\(T(t)\\), equilibrium temperature \\(T_0(t)\\), small residual trend arising long-term response earlier climate change \\(\\phi(t)\\): $$dh/dt = \\alpha \\cdot (T(t) - T_0(t)) + \\phi(t)$$ explained Kopp et al. (2016): \"first term describes GSL response climate change study period. second term covers small residual trend arising long-term response earlier climate change (.e., deglaciation), slowly decaying millennia order 0.1 mm/year 2000 CE. thus negligible effect modeled GSL rise 20th 21st centuries\" (Kopp et al., 2016, p. E1439). equation , \\(T_0(t)\\) \\(\\phi(t)\\) functions time, : $$\\frac{dT_0(t)}{dt} = \\frac{T(t) - Te(t)}{\\tau_1}$$ : $$\\frac{d\\phi(t)}{dt} = \\frac{\\phi}{\\tau_2}$$ \\(\\tau_1\\) \\(\\tau_2\\) constants.","code":""},{"path":"https://usepa.github.io/FrEDI/reference/temps2slr.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Convert global temperature change in degrees Celsius to global mean sea level rise (GMSL) in centimeters — temps2slr","text":"Environmental Protection Agency (EPA). 2021. Technical Documentation Framework Evaluating Damages Impacts (FrEDI). Technical Report EPA 430-R-21-004, EPA, Washington, DC. Available https://epa.gov/cira/FrEDI/. Kopp, Robert E., et al. (2016). Temperature-driven global sea-level variability Common Era. PNAS: E1434-E1441. Available https://www.pnas.org/content/113/11/E1434","code":""},{"path":"https://usepa.github.io/FrEDI/reference/temps2slr.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert global temperature change in degrees Celsius to global mean sea level rise (GMSL) in centimeters — temps2slr","text":"","code":"### Path to example scenarios scenariosPath <- system.file(package=\"FrEDI\") %>% file.path(\"extdata\",\"scenarios\") ### View example scenario names  scenariosPath %>% list.files #> [1] \"GCAM_scenario.csv\" \"pop_scenario.csv\"  \"slr_from_GCAM.csv\"  ### Temperature Scenario File Name tempInputFile <- scenariosPath %>% file.path(\"GCAM_scenario.csv\")  ### Import example temperature scenario example_inputsList <- import_inputs(tempfile = tempInputFile) #>  #> In import_inputs(): #> \tUser supplied temperature input... #> \t\tImporting data from C:/Users/emcduf01/OneDrive - Environmental Protection Agency (EPA)/Documents/R/R-4.0.3/library/FrEDI/extdata/scenarios/GCAM_scenario.csv... #> \t\tFormatting temperature inputs... #> Finished.  ### Extract the example temperature scenario data frame from the list ### Example has global temperatures in degrees Celsius x_tempInput <- example_inputsList$tempInput  ### Calculate global mean sea level rise in cm from global temperatures x_slr <- temps2slr(temps=x_tempInput$temp_C, years=x_tempInput$year)"},{"path":"https://usepa.github.io/FrEDI/news/index.html","id":"fredi-v34","dir":"Changelog","previous_headings":"","what":"FrEDI v3.4","title":"FrEDI v3.4","text":"Bug fixes - minor fixes inputs used run_fredi() run_fredi_sv() Updates - minor updates run_fredi_sv() output template documentation; run_fredi() input options Documentation fixes - minor documentation fixes, e.g., global conus temperature import_inputs, updates variant names, function documentation Additional sectors added - (temperature weather impacts ) Suicide Incidence; (health economic burden changes ) Vibriosis cases New features - added components create GitHub IO site (https://usepa.github.io/FrEDI/); new run_fredi() option report list input parameters runtime; new user option extend run_fredi() 2300","code":""},{"path":"https://usepa.github.io/FrEDI/news/index.html","id":"fredi-v30","dir":"Changelog","previous_headings":"","what":"FrEDI v3.0","title":"FrEDI v3.0","text":"Bug fix - global conus temperature import_inputs Additional sector added - ATS Extreme Temperature Mortality New feature - additional capability calculate impacts social vulnerable communities","code":""},{"path":"https://usepa.github.io/FrEDI/news/index.html","id":"fredi-v220","dir":"Changelog","previous_headings":"","what":"FrEDI v2.2.0","title":"FrEDI v2.2.0","text":"Additional sectors added - Crime, Agriculture, Marine Fisheries","code":""},{"path":"https://usepa.github.io/FrEDI/news/index.html","id":"fredi-v210","dir":"Changelog","previous_headings":"","what":"FrEDI v2.1.0","title":"FrEDI v2.1.0","text":"Updates - extreme temperature mortality sector New feature - option user supplied IEVSL","code":""},{"path":"https://usepa.github.io/FrEDI/news/index.html","id":"fredi-v20","dir":"Changelog","previous_headings":"","what":"FrEDI v2.0","title":"FrEDI v2.0","text":"Initial release FrEDI corresponds technical documentation 2021. https://www.epa.gov/cira/fredi/","code":""}]
